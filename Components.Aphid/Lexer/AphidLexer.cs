//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by llex.
// </auto-generated>
//------------------------------------------------------------------------------

#pragma warning disable 0162
using System;
using System.Collections.Generic;

namespace Components.Aphid.Lexer
{
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("llex", "1")]
    public enum AphidTokenType : short
    {
        None,
        AdditionOperator,
        AggregateOperator,
        AndOperator,
        AnyOperator,
        AssignmentOperator,
        BinaryAndOperator,
        BinaryOrOperator,
        breakKeyword,
        catchKeyword,
        ColonOperator,
        Comma,
        Comment,
        ComplementOperator,
        ConditionalOperator,
        DecrementOperator,
        defaultKeyword,
        definedKeyword,
        deleteKeyword,
        DistinctOperator,
        DivisionEqualOperator,
        DivisionOperator,
        elseKeyword,
        EndOfFile,
        EndOfStatement,
        EqualityOperator,
        extendKeyword,
        falseKeyword,
        finallyKeyword,
        forKeyword,
        functionOperator,
        GreaterThanOperator,
        GreaterThanOrEqualOperator,
        HexNumber,
        Identifier,
        ifKeyword,
        IncrementOperator,
        inKeyword,
        LeftBrace,
        LeftBracket,
        LeftParenthesis,
        LessThanOperator,
        LessThanOrEqualOperator,
        LoadLibraryOperator,
        LoadScriptOperator,
        MemberOperator,
        MinusEqualOperator,
        MinusOperator,
        ModulusEqualOperator,
        ModulusOperator,
        MultiplicationEqualOperator,
        MultiplicationOperator,
        NotEqualOperator,
        NotOperator,
        nullKeyword,
        Number,
        OrEqualOperator,
        OrOperator,
        PatternMatchingOperator,
        PipelineOperator,
        PlusEqualOperator,
        RangeOperator,
        retKeyword,
        RightBrace,
        RightBracket,
        RightParenthesis,
        SelectManyOperator,
        SelectOperator,
        ShiftLeft,
        ShiftRight,
        String,
        switchKeyword,
        thisKeyword,
        trueKeyword,
        tryKeyword,
        Unknown,
        WhereOperator,
        whileKeyword,
        WhiteSpace,
        XorEqualOperator,
        XorOperator
    }

    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("llex", "1")]
    public struct AphidToken
    {
        public AphidTokenType TokenType;
        public string Lexeme;
        public int Index;

        public AphidToken(AphidTokenType tokenType, string lexeme, int index)
        {
            TokenType = tokenType;
            Lexeme = lexeme;
            Index = index;
        }

        public override string ToString()
        {
            return string.Format("[{0}] {1}: {2}", Index, TokenType, Lexeme);
        }

        public bool IsKeyword()
        {
            return TokenType == AphidTokenType.trueKeyword ||
                TokenType == AphidTokenType.falseKeyword ||
                TokenType == AphidTokenType.nullKeyword ||
                TokenType == AphidTokenType.ifKeyword ||
                TokenType == AphidTokenType.elseKeyword ||
                TokenType == AphidTokenType.switchKeyword ||
                TokenType == AphidTokenType.defaultKeyword ||
                TokenType == AphidTokenType.whileKeyword ||
                TokenType == AphidTokenType.forKeyword ||
                TokenType == AphidTokenType.inKeyword ||
                TokenType == AphidTokenType.breakKeyword ||
                TokenType == AphidTokenType.retKeyword ||
                TokenType == AphidTokenType.thisKeyword ||
                TokenType == AphidTokenType.definedKeyword ||
                TokenType == AphidTokenType.deleteKeyword ||
                TokenType == AphidTokenType.extendKeyword ||
                TokenType == AphidTokenType.tryKeyword ||
                TokenType == AphidTokenType.catchKeyword ||
                TokenType == AphidTokenType.finallyKeyword;
        }
    }

    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("llex", "1")]
    public class AphidLexer
    {
        private string text = "";

        public string Text
        {
            get { return text; }
            set
            {
                text = value;
                lastIndex = text.Length - 1;
            }
        }

        int lastIndex = -1;

        int charIndex = -1;

        int mode = 0;

        int state = 0;

        char currentChar = (char)0;

        public AphidLexer()
        {
        }

        public AphidLexer(string text)
        {
            Text = text;
        }

        bool NextChar()
        {
            if (charIndex < lastIndex)
            {
                currentChar = text[++charIndex];
                return true;
            }

            return false;
        }

        private AphidTokenType GetToken()
        {

            if (mode == 0)
            {
                if (charIndex < lastIndex)
                {
                    currentChar = text[++charIndex];

                    switch (currentChar)
                    {
                        case '#':
                            if (charIndex < lastIndex)
                            {
                                currentChar = text[++charIndex];

                                switch (currentChar)
                                {
                                    case '#':

                                        return AphidTokenType.LoadLibraryOperator;

                                }

                                charIndex--;
                            }
                            return AphidTokenType.LoadScriptOperator;

                        case ',':

                            return AphidTokenType.Comma;

                        case ':':

                            return AphidTokenType.ColonOperator;

                        case '@':

                            return AphidTokenType.functionOperator;

                        case '?':

                            return AphidTokenType.ConditionalOperator;

                        case '.':
                            if (charIndex < lastIndex)
                            {
                                currentChar = text[++charIndex];

                                switch (currentChar)
                                {
                                    case '.':

                                        return AphidTokenType.RangeOperator;

                                }

                                charIndex--;
                            }
                            return AphidTokenType.MemberOperator;

                        case '(':

                            return AphidTokenType.LeftParenthesis;

                        case ')':

                            return AphidTokenType.RightParenthesis;

                        case '[':

                            return AphidTokenType.LeftBracket;

                        case ']':

                            return AphidTokenType.RightBracket;

                        case '{':

                            return AphidTokenType.LeftBrace;

                        case '}':

                            return AphidTokenType.RightBrace;

                        case '-':
                            if (charIndex < lastIndex)
                            {
                                currentChar = text[++charIndex];

                                switch (currentChar)
                                {
                                    case '=':

                                        return AphidTokenType.MinusEqualOperator;

                                    case '-':

                                        return AphidTokenType.DecrementOperator;

                                    case '<':

                                        return AphidTokenType.SelectManyOperator;

                                    case '>':

                                        return AphidTokenType.SelectOperator;

                                    case '?':

                                        return AphidTokenType.WhereOperator;

                                }

                                charIndex--;
                            }
                            return AphidTokenType.MinusOperator;

                        case '=':
                            if (charIndex < lastIndex)
                            {
                                currentChar = text[++charIndex];

                                switch (currentChar)
                                {
                                    case '=':

                                        return AphidTokenType.EqualityOperator;

                                    case '?':

                                        return AphidTokenType.AnyOperator;

                                }

                                charIndex--;
                            }
                            return AphidTokenType.AssignmentOperator;

                        case '+':
                            if (charIndex < lastIndex)
                            {
                                currentChar = text[++charIndex];

                                switch (currentChar)
                                {
                                    case '=':

                                        return AphidTokenType.PlusEqualOperator;

                                    case '+':

                                        return AphidTokenType.IncrementOperator;

                                    case '>':

                                        return AphidTokenType.AggregateOperator;

                                }

                                charIndex--;
                            }
                            return AphidTokenType.AdditionOperator;

                        case '*':
                            if (charIndex < lastIndex)
                            {
                                currentChar = text[++charIndex];

                                switch (currentChar)
                                {
                                    case '=':

                                        return AphidTokenType.MultiplicationEqualOperator;

                                }

                                charIndex--;
                            }
                            return AphidTokenType.MultiplicationOperator;

                        case '/':
                            if (charIndex < lastIndex)
                            {
                                currentChar = text[++charIndex];

                                switch (currentChar)
                                {
                                    case '=':

                                        return AphidTokenType.DivisionEqualOperator;

                                    case '/':


                                        state = 0;
                                        while (NextChar())
                                        {
                                            if (currentChar == '\r' || currentChar == '\n')
                                            {
                                                charIndex--;

                                                return AphidTokenType.Comment;
                                            }
                                            else if (currentChar == '?')
                                            {
                                                state = 1;
                                            }
                                            else if (state == 1 && currentChar == '>')
                                            {
                                                charIndex -= 2;

                                                return AphidTokenType.Comment;
                                            }
                                            else
                                            {
                                                state = 0;
                                            }
                                        }

                                        return AphidTokenType.Comment;

                                        break;

                                    case '*':


                                        state = 0;

                                        while (NextChar())
                                        {
                                            if ((state == 0 || state == 1) && currentChar == '*')
                                                state = 1;
                                            else if (state == 1 && currentChar == '/')
                                                return AphidTokenType.Comment;
                                            else
                                                state = 0;
                                        }

                                        return AphidTokenType.Comment;

                                        break;

                                }

                                charIndex--;
                            }
                            return AphidTokenType.DivisionOperator;

                        case '%':
                            if (charIndex < lastIndex)
                            {
                                currentChar = text[++charIndex];

                                switch (currentChar)
                                {
                                    case '=':

                                        return AphidTokenType.ModulusEqualOperator;

                                }

                                charIndex--;
                            }
                            return AphidTokenType.ModulusOperator;

                        case '|':
                            if (charIndex < lastIndex)
                            {
                                currentChar = text[++charIndex];

                                switch (currentChar)
                                {
                                    case '=':

                                        return AphidTokenType.OrEqualOperator;

                                    case '|':

                                        return AphidTokenType.OrOperator;

                                    case '>':

                                        return AphidTokenType.PipelineOperator;

                                }

                                charIndex--;
                            }
                            return AphidTokenType.BinaryOrOperator;

                        case '^':
                            if (charIndex < lastIndex)
                            {
                                currentChar = text[++charIndex];

                                switch (currentChar)
                                {
                                    case '=':

                                        return AphidTokenType.XorEqualOperator;

                                }

                                charIndex--;
                            }
                            return AphidTokenType.XorOperator;

                        case '&':
                            if (charIndex < lastIndex)
                            {
                                currentChar = text[++charIndex];

                                switch (currentChar)
                                {
                                    case '&':

                                        return AphidTokenType.AndOperator;

                                }

                                charIndex--;
                            }
                            return AphidTokenType.BinaryAndOperator;

                        case '~':

                            return AphidTokenType.ComplementOperator;

                        case '<':
                            if (charIndex < lastIndex)
                            {
                                currentChar = text[++charIndex];

                                switch (currentChar)
                                {
                                    case '<':

                                        return AphidTokenType.ShiftLeft;

                                    case '>':

                                        return AphidTokenType.NotEqualOperator;

                                    case '=':

                                        return AphidTokenType.LessThanOrEqualOperator;

                                }

                                charIndex--;
                            }
                            return AphidTokenType.LessThanOperator;

                        case '>':
                            if (charIndex < lastIndex)
                            {
                                currentChar = text[++charIndex];

                                switch (currentChar)
                                {
                                    case '>':

                                        return AphidTokenType.ShiftRight;

                                    case '=':

                                        return AphidTokenType.GreaterThanOrEqualOperator;

                                }

                                charIndex--;
                            }
                            return AphidTokenType.GreaterThanOperator;

                        case '!':
                            if (charIndex < lastIndex)
                            {
                                currentChar = text[++charIndex];

                                switch (currentChar)
                                {
                                    case '=':

                                        return AphidTokenType.NotEqualOperator;

                                    case '?':

                                        return AphidTokenType.DistinctOperator;

                                }

                                charIndex--;
                            }
                            return AphidTokenType.NotOperator;

                        case '$':

                            return AphidTokenType.PatternMatchingOperator;

                        case ';':

                            return AphidTokenType.EndOfStatement;

                        case '\x0d':

                            return AphidTokenType.WhiteSpace;

                        case '\x0a':

                            return AphidTokenType.WhiteSpace;

                        case '\x09':

                            return AphidTokenType.WhiteSpace;

                        case '\x0b':

                            return AphidTokenType.WhiteSpace;

                        case ' ':

                            return AphidTokenType.WhiteSpace;

                        case '0':
                            if (charIndex < lastIndex)
                            {
                                currentChar = text[++charIndex];

                                switch (currentChar)
                                {
                                    case 'x':


                                        if (!NextChar())
                                        {
                                            return AphidTokenType.Unknown;
                                        }

                                        state = 0;

                                        do
                                        {
                                            if ((state == 0 || state == 1) &&
                                                ((currentChar > 47 && currentChar < 58) ||
                                                (64 < currentChar && currentChar < 71) ||
                                                (96 < currentChar && currentChar < 103)))
                                                state = 1;
                                            else if (state == 1)
                                            {
                                                charIndex--;

                                                return AphidTokenType.HexNumber;
                                            }
                                            else
                                            {
                                                charIndex--;

                                                return AphidTokenType.Unknown;
                                            }
                                        }
                                        while (NextChar());

                                        return AphidTokenType.HexNumber;

                                        break;

                                }

                                charIndex--;
                            }

                            NextChar();
                            state = 1;

                            do
                            {
                                if ((state == 0 || state == 1) && currentChar > 47 && currentChar < 58)
                                    state = 1;
                                else if (state == 1 && currentChar == '.')
                                    state = 2;
                                else if ((state == 2 || state == 3) && currentChar > 47 && currentChar < 58)
                                    state = 3;
                                else if ((state == 1 || state == 3) && (currentChar == 'E' || currentChar == 'e'))
                                {
                                    state = 4;
                                }
                                else if (state == 4 && (currentChar == '-' || currentChar == '+'))
                                {
                                    state = 6;
                                }
                                else if (state == 4 && currentChar > 47 && currentChar < 58)
                                {
                                    state = 5;
                                }
                                else if (state == 5 && currentChar > 47 && currentChar < 58)
                                {
                                    continue;
                                }
                                else if (state == 6)
                                {
                                    if (currentChar > 47 && currentChar < 58)
                                    {
                                        state = 5;
                                        continue;
                                    }
                                    else
                                    {
                                        return AphidTokenType.Unknown;
                                    }
                                }
                                else if (state == 1 || state == 3 || state == 5)
                                {
                                    charIndex--;

                                    return AphidTokenType.Number;
                                }
                                else if (state == 2)
                                {
                                    charIndex -= 2;

                                    return AphidTokenType.Number;
                                }
                                else
                                {
                                    break;
                                }
                            }
                            while (NextChar());

                            return AphidTokenType.Number;

                            break;

                        case '"':


                            bool escaped = false;

                            while (NextChar())
                            {
                                if (!escaped && currentChar == '"')
                                    return AphidTokenType.String;

                                escaped = !escaped && currentChar == '\\';
                            }

                            return AphidTokenType.String;

                            break;

                        case '\'':


                            escaped = false;

                            while (NextChar())
                            {
                                if (!escaped && currentChar == '\'')
                                    return AphidTokenType.String;

                                escaped = !escaped && currentChar == '\\';
                            }

                            return AphidTokenType.String;

                            break;

                        case 't':
                            if (charIndex < lastIndex)
                            {
                                currentChar = text[++charIndex];

                                switch (currentChar)
                                {
                                    case 'r':
                                        if (charIndex < lastIndex)
                                        {
                                            currentChar = text[++charIndex];

                                            switch (currentChar)
                                            {
                                                case 'u':
                                                    if (charIndex < lastIndex)
                                                    {
                                                        currentChar = text[++charIndex];

                                                        switch (currentChar)
                                                        {
                                                            case 'e':


                                                                if (!NextChar())
                                                                {
                                                                    return AphidTokenType.trueKeyword;
                                                                }

                                                                state = 0;

                                                                do
                                                                {
                                                                    if (((currentChar >= 'a' && currentChar <= 'z') ||
                                                                        (currentChar >= 'A' && currentChar <= 'Z') ||
                                                                        (currentChar >= '0' && currentChar <= '9') ||
                                                                        currentChar == '_' ||
                                                                        (currentChar >= '\u007f' && currentChar <= '\uffff')))
                                                                    {
                                                                        state = 1;
                                                                    }
                                                                    else if (state == 1)
                                                                    {
                                                                        charIndex--;

                                                                        return AphidTokenType.Identifier;
                                                                    }
                                                                    else
                                                                    {
                                                                        charIndex--;

                                                                        return AphidTokenType.trueKeyword;
                                                                    }
                                                                }
                                                                while (NextChar());

                                                                if (state == 1)
                                                                {
                                                                    return AphidTokenType.Identifier;
                                                                }

                                                                break;

                                                        }

                                                        charIndex--;
                                                    }

                                                    if (!NextChar())
                                                    {
                                                        return AphidTokenType.Identifier;
                                                    }

                                                    state = 0;

                                                    do
                                                    {
                                                        if (((currentChar >= 'a' && currentChar <= 'z') ||
                                                            (currentChar >= 'A' && currentChar <= 'Z') ||
                                                            (currentChar >= '0' && currentChar <= '9') ||
                                                            currentChar == '_' ||
                                                            (currentChar >= '\u007f' && currentChar <= '\uffff')))
                                                        {
                                                            state = 1;
                                                        }
                                                        else if (state == 1)
                                                        {
                                                            charIndex--;

                                                            return AphidTokenType.Identifier;
                                                        }
                                                        else
                                                        {
                                                            charIndex--;

                                                            return AphidTokenType.Identifier;
                                                        }
                                                    }
                                                    while (NextChar());

                                                    if (state == 1)
                                                    {
                                                        return AphidTokenType.Identifier;
                                                    }

                                                    break;

                                                case 'y':


                                                    if (!NextChar())
                                                    {
                                                        return AphidTokenType.tryKeyword;
                                                    }

                                                    state = 0;

                                                    do
                                                    {
                                                        if (((currentChar >= 'a' && currentChar <= 'z') ||
                                                            (currentChar >= 'A' && currentChar <= 'Z') ||
                                                            (currentChar >= '0' && currentChar <= '9') ||
                                                            currentChar == '_' ||
                                                            (currentChar >= '\u007f' && currentChar <= '\uffff')))
                                                        {
                                                            state = 1;
                                                        }
                                                        else if (state == 1)
                                                        {
                                                            charIndex--;

                                                            return AphidTokenType.Identifier;
                                                        }
                                                        else
                                                        {
                                                            charIndex--;

                                                            return AphidTokenType.tryKeyword;
                                                        }
                                                    }
                                                    while (NextChar());

                                                    if (state == 1)
                                                    {
                                                        return AphidTokenType.Identifier;
                                                    }

                                                    break;

                                            }

                                            charIndex--;
                                        }

                                        if (!NextChar())
                                        {
                                            return AphidTokenType.Identifier;
                                        }

                                        state = 0;

                                        do
                                        {
                                            if (((currentChar >= 'a' && currentChar <= 'z') ||
                                                (currentChar >= 'A' && currentChar <= 'Z') ||
                                                (currentChar >= '0' && currentChar <= '9') ||
                                                currentChar == '_' ||
                                                (currentChar >= '\u007f' && currentChar <= '\uffff')))
                                            {
                                                state = 1;
                                            }
                                            else if (state == 1)
                                            {
                                                charIndex--;

                                                return AphidTokenType.Identifier;
                                            }
                                            else
                                            {
                                                charIndex--;

                                                return AphidTokenType.Identifier;
                                            }
                                        }
                                        while (NextChar());

                                        if (state == 1)
                                        {
                                            return AphidTokenType.Identifier;
                                        }

                                        break;

                                    case 'h':
                                        if (charIndex < lastIndex)
                                        {
                                            currentChar = text[++charIndex];

                                            switch (currentChar)
                                            {
                                                case 'i':
                                                    if (charIndex < lastIndex)
                                                    {
                                                        currentChar = text[++charIndex];

                                                        switch (currentChar)
                                                        {
                                                            case 's':


                                                                if (!NextChar())
                                                                {
                                                                    return AphidTokenType.thisKeyword;
                                                                }

                                                                state = 0;

                                                                do
                                                                {
                                                                    if (((currentChar >= 'a' && currentChar <= 'z') ||
                                                                        (currentChar >= 'A' && currentChar <= 'Z') ||
                                                                        (currentChar >= '0' && currentChar <= '9') ||
                                                                        currentChar == '_' ||
                                                                        (currentChar >= '\u007f' && currentChar <= '\uffff')))
                                                                    {
                                                                        state = 1;
                                                                    }
                                                                    else if (state == 1)
                                                                    {
                                                                        charIndex--;

                                                                        return AphidTokenType.Identifier;
                                                                    }
                                                                    else
                                                                    {
                                                                        charIndex--;

                                                                        return AphidTokenType.thisKeyword;
                                                                    }
                                                                }
                                                                while (NextChar());

                                                                if (state == 1)
                                                                {
                                                                    return AphidTokenType.Identifier;
                                                                }

                                                                break;

                                                        }

                                                        charIndex--;
                                                    }

                                                    if (!NextChar())
                                                    {
                                                        return AphidTokenType.Identifier;
                                                    }

                                                    state = 0;

                                                    do
                                                    {
                                                        if (((currentChar >= 'a' && currentChar <= 'z') ||
                                                            (currentChar >= 'A' && currentChar <= 'Z') ||
                                                            (currentChar >= '0' && currentChar <= '9') ||
                                                            currentChar == '_' ||
                                                            (currentChar >= '\u007f' && currentChar <= '\uffff')))
                                                        {
                                                            state = 1;
                                                        }
                                                        else if (state == 1)
                                                        {
                                                            charIndex--;

                                                            return AphidTokenType.Identifier;
                                                        }
                                                        else
                                                        {
                                                            charIndex--;

                                                            return AphidTokenType.Identifier;
                                                        }
                                                    }
                                                    while (NextChar());

                                                    if (state == 1)
                                                    {
                                                        return AphidTokenType.Identifier;
                                                    }

                                                    break;

                                            }

                                            charIndex--;
                                        }

                                        if (!NextChar())
                                        {
                                            return AphidTokenType.Identifier;
                                        }

                                        state = 0;

                                        do
                                        {
                                            if (((currentChar >= 'a' && currentChar <= 'z') ||
                                                (currentChar >= 'A' && currentChar <= 'Z') ||
                                                (currentChar >= '0' && currentChar <= '9') ||
                                                currentChar == '_' ||
                                                (currentChar >= '\u007f' && currentChar <= '\uffff')))
                                            {
                                                state = 1;
                                            }
                                            else if (state == 1)
                                            {
                                                charIndex--;

                                                return AphidTokenType.Identifier;
                                            }
                                            else
                                            {
                                                charIndex--;

                                                return AphidTokenType.Identifier;
                                            }
                                        }
                                        while (NextChar());

                                        if (state == 1)
                                        {
                                            return AphidTokenType.Identifier;
                                        }

                                        break;

                                }

                                charIndex--;
                            }

                            if (!NextChar())
                            {
                                return AphidTokenType.Identifier;
                            }

                            state = 0;

                            do
                            {
                                if (((currentChar >= 'a' && currentChar <= 'z') ||
                                    (currentChar >= 'A' && currentChar <= 'Z') ||
                                    (currentChar >= '0' && currentChar <= '9') ||
                                    currentChar == '_' ||
                                    (currentChar >= '\u007f' && currentChar <= '\uffff')))
                                {
                                    state = 1;
                                }
                                else if (state == 1)
                                {
                                    charIndex--;

                                    return AphidTokenType.Identifier;
                                }
                                else
                                {
                                    charIndex--;

                                    return AphidTokenType.Identifier;
                                }
                            }
                            while (NextChar());

                            if (state == 1)
                            {
                                return AphidTokenType.Identifier;
                            }

                            break;

                        case 'f':
                            if (charIndex < lastIndex)
                            {
                                currentChar = text[++charIndex];

                                switch (currentChar)
                                {
                                    case 'a':
                                        if (charIndex < lastIndex)
                                        {
                                            currentChar = text[++charIndex];

                                            switch (currentChar)
                                            {
                                                case 'l':
                                                    if (charIndex < lastIndex)
                                                    {
                                                        currentChar = text[++charIndex];

                                                        switch (currentChar)
                                                        {
                                                            case 's':
                                                                if (charIndex < lastIndex)
                                                                {
                                                                    currentChar = text[++charIndex];

                                                                    switch (currentChar)
                                                                    {
                                                                        case 'e':


                                                                            if (!NextChar())
                                                                            {
                                                                                return AphidTokenType.falseKeyword;
                                                                            }

                                                                            state = 0;

                                                                            do
                                                                            {
                                                                                if (((currentChar >= 'a' && currentChar <= 'z') ||
                                                                                    (currentChar >= 'A' && currentChar <= 'Z') ||
                                                                                    (currentChar >= '0' && currentChar <= '9') ||
                                                                                    currentChar == '_' ||
                                                                                    (currentChar >= '\u007f' && currentChar <= '\uffff')))
                                                                                {
                                                                                    state = 1;
                                                                                }
                                                                                else if (state == 1)
                                                                                {
                                                                                    charIndex--;

                                                                                    return AphidTokenType.Identifier;
                                                                                }
                                                                                else
                                                                                {
                                                                                    charIndex--;

                                                                                    return AphidTokenType.falseKeyword;
                                                                                }
                                                                            }
                                                                            while (NextChar());

                                                                            if (state == 1)
                                                                            {
                                                                                return AphidTokenType.Identifier;
                                                                            }

                                                                            break;

                                                                    }

                                                                    charIndex--;
                                                                }

                                                                if (!NextChar())
                                                                {
                                                                    return AphidTokenType.Identifier;
                                                                }

                                                                state = 0;

                                                                do
                                                                {
                                                                    if (((currentChar >= 'a' && currentChar <= 'z') ||
                                                                        (currentChar >= 'A' && currentChar <= 'Z') ||
                                                                        (currentChar >= '0' && currentChar <= '9') ||
                                                                        currentChar == '_' ||
                                                                        (currentChar >= '\u007f' && currentChar <= '\uffff')))
                                                                    {
                                                                        state = 1;
                                                                    }
                                                                    else if (state == 1)
                                                                    {
                                                                        charIndex--;

                                                                        return AphidTokenType.Identifier;
                                                                    }
                                                                    else
                                                                    {
                                                                        charIndex--;

                                                                        return AphidTokenType.Identifier;
                                                                    }
                                                                }
                                                                while (NextChar());

                                                                if (state == 1)
                                                                {
                                                                    return AphidTokenType.Identifier;
                                                                }

                                                                break;

                                                        }

                                                        charIndex--;
                                                    }

                                                    if (!NextChar())
                                                    {
                                                        return AphidTokenType.Identifier;
                                                    }

                                                    state = 0;

                                                    do
                                                    {
                                                        if (((currentChar >= 'a' && currentChar <= 'z') ||
                                                            (currentChar >= 'A' && currentChar <= 'Z') ||
                                                            (currentChar >= '0' && currentChar <= '9') ||
                                                            currentChar == '_' ||
                                                            (currentChar >= '\u007f' && currentChar <= '\uffff')))
                                                        {
                                                            state = 1;
                                                        }
                                                        else if (state == 1)
                                                        {
                                                            charIndex--;

                                                            return AphidTokenType.Identifier;
                                                        }
                                                        else
                                                        {
                                                            charIndex--;

                                                            return AphidTokenType.Identifier;
                                                        }
                                                    }
                                                    while (NextChar());

                                                    if (state == 1)
                                                    {
                                                        return AphidTokenType.Identifier;
                                                    }

                                                    break;

                                            }

                                            charIndex--;
                                        }

                                        if (!NextChar())
                                        {
                                            return AphidTokenType.Identifier;
                                        }

                                        state = 0;

                                        do
                                        {
                                            if (((currentChar >= 'a' && currentChar <= 'z') ||
                                                (currentChar >= 'A' && currentChar <= 'Z') ||
                                                (currentChar >= '0' && currentChar <= '9') ||
                                                currentChar == '_' ||
                                                (currentChar >= '\u007f' && currentChar <= '\uffff')))
                                            {
                                                state = 1;
                                            }
                                            else if (state == 1)
                                            {
                                                charIndex--;

                                                return AphidTokenType.Identifier;
                                            }
                                            else
                                            {
                                                charIndex--;

                                                return AphidTokenType.Identifier;
                                            }
                                        }
                                        while (NextChar());

                                        if (state == 1)
                                        {
                                            return AphidTokenType.Identifier;
                                        }

                                        break;

                                    case 'o':
                                        if (charIndex < lastIndex)
                                        {
                                            currentChar = text[++charIndex];

                                            switch (currentChar)
                                            {
                                                case 'r':


                                                    if (!NextChar())
                                                    {
                                                        return AphidTokenType.forKeyword;
                                                    }

                                                    state = 0;

                                                    do
                                                    {
                                                        if (((currentChar >= 'a' && currentChar <= 'z') ||
                                                            (currentChar >= 'A' && currentChar <= 'Z') ||
                                                            (currentChar >= '0' && currentChar <= '9') ||
                                                            currentChar == '_' ||
                                                            (currentChar >= '\u007f' && currentChar <= '\uffff')))
                                                        {
                                                            state = 1;
                                                        }
                                                        else if (state == 1)
                                                        {
                                                            charIndex--;

                                                            return AphidTokenType.Identifier;
                                                        }
                                                        else
                                                        {
                                                            charIndex--;

                                                            return AphidTokenType.forKeyword;
                                                        }
                                                    }
                                                    while (NextChar());

                                                    if (state == 1)
                                                    {
                                                        return AphidTokenType.Identifier;
                                                    }

                                                    break;

                                            }

                                            charIndex--;
                                        }

                                        if (!NextChar())
                                        {
                                            return AphidTokenType.Identifier;
                                        }

                                        state = 0;

                                        do
                                        {
                                            if (((currentChar >= 'a' && currentChar <= 'z') ||
                                                (currentChar >= 'A' && currentChar <= 'Z') ||
                                                (currentChar >= '0' && currentChar <= '9') ||
                                                currentChar == '_' ||
                                                (currentChar >= '\u007f' && currentChar <= '\uffff')))
                                            {
                                                state = 1;
                                            }
                                            else if (state == 1)
                                            {
                                                charIndex--;

                                                return AphidTokenType.Identifier;
                                            }
                                            else
                                            {
                                                charIndex--;

                                                return AphidTokenType.Identifier;
                                            }
                                        }
                                        while (NextChar());

                                        if (state == 1)
                                        {
                                            return AphidTokenType.Identifier;
                                        }

                                        break;

                                    case 'i':
                                        if (charIndex < lastIndex)
                                        {
                                            currentChar = text[++charIndex];

                                            switch (currentChar)
                                            {
                                                case 'n':
                                                    if (charIndex < lastIndex)
                                                    {
                                                        currentChar = text[++charIndex];

                                                        switch (currentChar)
                                                        {
                                                            case 'a':
                                                                if (charIndex < lastIndex)
                                                                {
                                                                    currentChar = text[++charIndex];

                                                                    switch (currentChar)
                                                                    {
                                                                        case 'l':
                                                                            if (charIndex < lastIndex)
                                                                            {
                                                                                currentChar = text[++charIndex];

                                                                                switch (currentChar)
                                                                                {
                                                                                    case 'l':
                                                                                        if (charIndex < lastIndex)
                                                                                        {
                                                                                            currentChar = text[++charIndex];

                                                                                            switch (currentChar)
                                                                                            {
                                                                                                case 'y':


                                                                                                    if (!NextChar())
                                                                                                    {
                                                                                                        return AphidTokenType.finallyKeyword;
                                                                                                    }

                                                                                                    state = 0;

                                                                                                    do
                                                                                                    {
                                                                                                        if (((currentChar >= 'a' && currentChar <= 'z') ||
                                                                                                            (currentChar >= 'A' && currentChar <= 'Z') ||
                                                                                                            (currentChar >= '0' && currentChar <= '9') ||
                                                                                                            currentChar == '_' ||
                                                                                                            (currentChar >= '\u007f' && currentChar <= '\uffff')))
                                                                                                        {
                                                                                                            state = 1;
                                                                                                        }
                                                                                                        else if (state == 1)
                                                                                                        {
                                                                                                            charIndex--;

                                                                                                            return AphidTokenType.Identifier;
                                                                                                        }
                                                                                                        else
                                                                                                        {
                                                                                                            charIndex--;

                                                                                                            return AphidTokenType.finallyKeyword;
                                                                                                        }
                                                                                                    }
                                                                                                    while (NextChar());

                                                                                                    if (state == 1)
                                                                                                    {
                                                                                                        return AphidTokenType.Identifier;
                                                                                                    }

                                                                                                    break;

                                                                                            }

                                                                                            charIndex--;
                                                                                        }

                                                                                        if (!NextChar())
                                                                                        {
                                                                                            return AphidTokenType.Identifier;
                                                                                        }

                                                                                        state = 0;

                                                                                        do
                                                                                        {
                                                                                            if (((currentChar >= 'a' && currentChar <= 'z') ||
                                                                                                (currentChar >= 'A' && currentChar <= 'Z') ||
                                                                                                (currentChar >= '0' && currentChar <= '9') ||
                                                                                                currentChar == '_' ||
                                                                                                (currentChar >= '\u007f' && currentChar <= '\uffff')))
                                                                                            {
                                                                                                state = 1;
                                                                                            }
                                                                                            else if (state == 1)
                                                                                            {
                                                                                                charIndex--;

                                                                                                return AphidTokenType.Identifier;
                                                                                            }
                                                                                            else
                                                                                            {
                                                                                                charIndex--;

                                                                                                return AphidTokenType.Identifier;
                                                                                            }
                                                                                        }
                                                                                        while (NextChar());

                                                                                        if (state == 1)
                                                                                        {
                                                                                            return AphidTokenType.Identifier;
                                                                                        }

                                                                                        break;

                                                                                }

                                                                                charIndex--;
                                                                            }

                                                                            if (!NextChar())
                                                                            {
                                                                                return AphidTokenType.Identifier;
                                                                            }

                                                                            state = 0;

                                                                            do
                                                                            {
                                                                                if (((currentChar >= 'a' && currentChar <= 'z') ||
                                                                                    (currentChar >= 'A' && currentChar <= 'Z') ||
                                                                                    (currentChar >= '0' && currentChar <= '9') ||
                                                                                    currentChar == '_' ||
                                                                                    (currentChar >= '\u007f' && currentChar <= '\uffff')))
                                                                                {
                                                                                    state = 1;
                                                                                }
                                                                                else if (state == 1)
                                                                                {
                                                                                    charIndex--;

                                                                                    return AphidTokenType.Identifier;
                                                                                }
                                                                                else
                                                                                {
                                                                                    charIndex--;

                                                                                    return AphidTokenType.Identifier;
                                                                                }
                                                                            }
                                                                            while (NextChar());

                                                                            if (state == 1)
                                                                            {
                                                                                return AphidTokenType.Identifier;
                                                                            }

                                                                            break;

                                                                    }

                                                                    charIndex--;
                                                                }

                                                                if (!NextChar())
                                                                {
                                                                    return AphidTokenType.Identifier;
                                                                }

                                                                state = 0;

                                                                do
                                                                {
                                                                    if (((currentChar >= 'a' && currentChar <= 'z') ||
                                                                        (currentChar >= 'A' && currentChar <= 'Z') ||
                                                                        (currentChar >= '0' && currentChar <= '9') ||
                                                                        currentChar == '_' ||
                                                                        (currentChar >= '\u007f' && currentChar <= '\uffff')))
                                                                    {
                                                                        state = 1;
                                                                    }
                                                                    else if (state == 1)
                                                                    {
                                                                        charIndex--;

                                                                        return AphidTokenType.Identifier;
                                                                    }
                                                                    else
                                                                    {
                                                                        charIndex--;

                                                                        return AphidTokenType.Identifier;
                                                                    }
                                                                }
                                                                while (NextChar());

                                                                if (state == 1)
                                                                {
                                                                    return AphidTokenType.Identifier;
                                                                }

                                                                break;

                                                        }

                                                        charIndex--;
                                                    }

                                                    if (!NextChar())
                                                    {
                                                        return AphidTokenType.Identifier;
                                                    }

                                                    state = 0;

                                                    do
                                                    {
                                                        if (((currentChar >= 'a' && currentChar <= 'z') ||
                                                            (currentChar >= 'A' && currentChar <= 'Z') ||
                                                            (currentChar >= '0' && currentChar <= '9') ||
                                                            currentChar == '_' ||
                                                            (currentChar >= '\u007f' && currentChar <= '\uffff')))
                                                        {
                                                            state = 1;
                                                        }
                                                        else if (state == 1)
                                                        {
                                                            charIndex--;

                                                            return AphidTokenType.Identifier;
                                                        }
                                                        else
                                                        {
                                                            charIndex--;

                                                            return AphidTokenType.Identifier;
                                                        }
                                                    }
                                                    while (NextChar());

                                                    if (state == 1)
                                                    {
                                                        return AphidTokenType.Identifier;
                                                    }

                                                    break;

                                            }

                                            charIndex--;
                                        }

                                        if (!NextChar())
                                        {
                                            return AphidTokenType.Identifier;
                                        }

                                        state = 0;

                                        do
                                        {
                                            if (((currentChar >= 'a' && currentChar <= 'z') ||
                                                (currentChar >= 'A' && currentChar <= 'Z') ||
                                                (currentChar >= '0' && currentChar <= '9') ||
                                                currentChar == '_' ||
                                                (currentChar >= '\u007f' && currentChar <= '\uffff')))
                                            {
                                                state = 1;
                                            }
                                            else if (state == 1)
                                            {
                                                charIndex--;

                                                return AphidTokenType.Identifier;
                                            }
                                            else
                                            {
                                                charIndex--;

                                                return AphidTokenType.Identifier;
                                            }
                                        }
                                        while (NextChar());

                                        if (state == 1)
                                        {
                                            return AphidTokenType.Identifier;
                                        }

                                        break;

                                }

                                charIndex--;
                            }

                            if (!NextChar())
                            {
                                return AphidTokenType.Identifier;
                            }

                            state = 0;

                            do
                            {
                                if (((currentChar >= 'a' && currentChar <= 'z') ||
                                    (currentChar >= 'A' && currentChar <= 'Z') ||
                                    (currentChar >= '0' && currentChar <= '9') ||
                                    currentChar == '_' ||
                                    (currentChar >= '\u007f' && currentChar <= '\uffff')))
                                {
                                    state = 1;
                                }
                                else if (state == 1)
                                {
                                    charIndex--;

                                    return AphidTokenType.Identifier;
                                }
                                else
                                {
                                    charIndex--;

                                    return AphidTokenType.Identifier;
                                }
                            }
                            while (NextChar());

                            if (state == 1)
                            {
                                return AphidTokenType.Identifier;
                            }

                            break;

                        case 'n':
                            if (charIndex < lastIndex)
                            {
                                currentChar = text[++charIndex];

                                switch (currentChar)
                                {
                                    case 'u':
                                        if (charIndex < lastIndex)
                                        {
                                            currentChar = text[++charIndex];

                                            switch (currentChar)
                                            {
                                                case 'l':
                                                    if (charIndex < lastIndex)
                                                    {
                                                        currentChar = text[++charIndex];

                                                        switch (currentChar)
                                                        {
                                                            case 'l':


                                                                if (!NextChar())
                                                                {
                                                                    return AphidTokenType.nullKeyword;
                                                                }

                                                                state = 0;

                                                                do
                                                                {
                                                                    if (((currentChar >= 'a' && currentChar <= 'z') ||
                                                                        (currentChar >= 'A' && currentChar <= 'Z') ||
                                                                        (currentChar >= '0' && currentChar <= '9') ||
                                                                        currentChar == '_' ||
                                                                        (currentChar >= '\u007f' && currentChar <= '\uffff')))
                                                                    {
                                                                        state = 1;
                                                                    }
                                                                    else if (state == 1)
                                                                    {
                                                                        charIndex--;

                                                                        return AphidTokenType.Identifier;
                                                                    }
                                                                    else
                                                                    {
                                                                        charIndex--;

                                                                        return AphidTokenType.nullKeyword;
                                                                    }
                                                                }
                                                                while (NextChar());

                                                                if (state == 1)
                                                                {
                                                                    return AphidTokenType.Identifier;
                                                                }

                                                                break;

                                                        }

                                                        charIndex--;
                                                    }

                                                    if (!NextChar())
                                                    {
                                                        return AphidTokenType.Identifier;
                                                    }

                                                    state = 0;

                                                    do
                                                    {
                                                        if (((currentChar >= 'a' && currentChar <= 'z') ||
                                                            (currentChar >= 'A' && currentChar <= 'Z') ||
                                                            (currentChar >= '0' && currentChar <= '9') ||
                                                            currentChar == '_' ||
                                                            (currentChar >= '\u007f' && currentChar <= '\uffff')))
                                                        {
                                                            state = 1;
                                                        }
                                                        else if (state == 1)
                                                        {
                                                            charIndex--;

                                                            return AphidTokenType.Identifier;
                                                        }
                                                        else
                                                        {
                                                            charIndex--;

                                                            return AphidTokenType.Identifier;
                                                        }
                                                    }
                                                    while (NextChar());

                                                    if (state == 1)
                                                    {
                                                        return AphidTokenType.Identifier;
                                                    }

                                                    break;

                                            }

                                            charIndex--;
                                        }

                                        if (!NextChar())
                                        {
                                            return AphidTokenType.Identifier;
                                        }

                                        state = 0;

                                        do
                                        {
                                            if (((currentChar >= 'a' && currentChar <= 'z') ||
                                                (currentChar >= 'A' && currentChar <= 'Z') ||
                                                (currentChar >= '0' && currentChar <= '9') ||
                                                currentChar == '_' ||
                                                (currentChar >= '\u007f' && currentChar <= '\uffff')))
                                            {
                                                state = 1;
                                            }
                                            else if (state == 1)
                                            {
                                                charIndex--;

                                                return AphidTokenType.Identifier;
                                            }
                                            else
                                            {
                                                charIndex--;

                                                return AphidTokenType.Identifier;
                                            }
                                        }
                                        while (NextChar());

                                        if (state == 1)
                                        {
                                            return AphidTokenType.Identifier;
                                        }

                                        break;

                                }

                                charIndex--;
                            }

                            if (!NextChar())
                            {
                                return AphidTokenType.Identifier;
                            }

                            state = 0;

                            do
                            {
                                if (((currentChar >= 'a' && currentChar <= 'z') ||
                                    (currentChar >= 'A' && currentChar <= 'Z') ||
                                    (currentChar >= '0' && currentChar <= '9') ||
                                    currentChar == '_' ||
                                    (currentChar >= '\u007f' && currentChar <= '\uffff')))
                                {
                                    state = 1;
                                }
                                else if (state == 1)
                                {
                                    charIndex--;

                                    return AphidTokenType.Identifier;
                                }
                                else
                                {
                                    charIndex--;

                                    return AphidTokenType.Identifier;
                                }
                            }
                            while (NextChar());

                            if (state == 1)
                            {
                                return AphidTokenType.Identifier;
                            }

                            break;

                        case 'i':
                            if (charIndex < lastIndex)
                            {
                                currentChar = text[++charIndex];

                                switch (currentChar)
                                {
                                    case 'f':


                                        if (!NextChar())
                                        {
                                            return AphidTokenType.ifKeyword;
                                        }

                                        state = 0;

                                        do
                                        {
                                            if (((currentChar >= 'a' && currentChar <= 'z') ||
                                                (currentChar >= 'A' && currentChar <= 'Z') ||
                                                (currentChar >= '0' && currentChar <= '9') ||
                                                currentChar == '_' ||
                                                (currentChar >= '\u007f' && currentChar <= '\uffff')))
                                            {
                                                state = 1;
                                            }
                                            else if (state == 1)
                                            {
                                                charIndex--;

                                                return AphidTokenType.Identifier;
                                            }
                                            else
                                            {
                                                charIndex--;

                                                return AphidTokenType.ifKeyword;
                                            }
                                        }
                                        while (NextChar());

                                        if (state == 1)
                                        {
                                            return AphidTokenType.Identifier;
                                        }

                                        break;

                                    case 'n':


                                        if (!NextChar())
                                        {
                                            return AphidTokenType.inKeyword;
                                        }

                                        state = 0;

                                        do
                                        {
                                            if (((currentChar >= 'a' && currentChar <= 'z') ||
                                                (currentChar >= 'A' && currentChar <= 'Z') ||
                                                (currentChar >= '0' && currentChar <= '9') ||
                                                currentChar == '_' ||
                                                (currentChar >= '\u007f' && currentChar <= '\uffff')))
                                            {
                                                state = 1;
                                            }
                                            else if (state == 1)
                                            {
                                                charIndex--;

                                                return AphidTokenType.Identifier;
                                            }
                                            else
                                            {
                                                charIndex--;

                                                return AphidTokenType.inKeyword;
                                            }
                                        }
                                        while (NextChar());

                                        if (state == 1)
                                        {
                                            return AphidTokenType.Identifier;
                                        }

                                        break;

                                }

                                charIndex--;
                            }

                            if (!NextChar())
                            {
                                return AphidTokenType.Identifier;
                            }

                            state = 0;

                            do
                            {
                                if (((currentChar >= 'a' && currentChar <= 'z') ||
                                    (currentChar >= 'A' && currentChar <= 'Z') ||
                                    (currentChar >= '0' && currentChar <= '9') ||
                                    currentChar == '_' ||
                                    (currentChar >= '\u007f' && currentChar <= '\uffff')))
                                {
                                    state = 1;
                                }
                                else if (state == 1)
                                {
                                    charIndex--;

                                    return AphidTokenType.Identifier;
                                }
                                else
                                {
                                    charIndex--;

                                    return AphidTokenType.Identifier;
                                }
                            }
                            while (NextChar());

                            if (state == 1)
                            {
                                return AphidTokenType.Identifier;
                            }

                            break;

                        case 'e':
                            if (charIndex < lastIndex)
                            {
                                currentChar = text[++charIndex];

                                switch (currentChar)
                                {
                                    case 'l':
                                        if (charIndex < lastIndex)
                                        {
                                            currentChar = text[++charIndex];

                                            switch (currentChar)
                                            {
                                                case 's':
                                                    if (charIndex < lastIndex)
                                                    {
                                                        currentChar = text[++charIndex];

                                                        switch (currentChar)
                                                        {
                                                            case 'e':


                                                                if (!NextChar())
                                                                {
                                                                    return AphidTokenType.elseKeyword;
                                                                }

                                                                state = 0;

                                                                do
                                                                {
                                                                    if (((currentChar >= 'a' && currentChar <= 'z') ||
                                                                        (currentChar >= 'A' && currentChar <= 'Z') ||
                                                                        (currentChar >= '0' && currentChar <= '9') ||
                                                                        currentChar == '_' ||
                                                                        (currentChar >= '\u007f' && currentChar <= '\uffff')))
                                                                    {
                                                                        state = 1;
                                                                    }
                                                                    else if (state == 1)
                                                                    {
                                                                        charIndex--;

                                                                        return AphidTokenType.Identifier;
                                                                    }
                                                                    else
                                                                    {
                                                                        charIndex--;

                                                                        return AphidTokenType.elseKeyword;
                                                                    }
                                                                }
                                                                while (NextChar());

                                                                if (state == 1)
                                                                {
                                                                    return AphidTokenType.Identifier;
                                                                }

                                                                break;

                                                        }

                                                        charIndex--;
                                                    }

                                                    if (!NextChar())
                                                    {
                                                        return AphidTokenType.Identifier;
                                                    }

                                                    state = 0;

                                                    do
                                                    {
                                                        if (((currentChar >= 'a' && currentChar <= 'z') ||
                                                            (currentChar >= 'A' && currentChar <= 'Z') ||
                                                            (currentChar >= '0' && currentChar <= '9') ||
                                                            currentChar == '_' ||
                                                            (currentChar >= '\u007f' && currentChar <= '\uffff')))
                                                        {
                                                            state = 1;
                                                        }
                                                        else if (state == 1)
                                                        {
                                                            charIndex--;

                                                            return AphidTokenType.Identifier;
                                                        }
                                                        else
                                                        {
                                                            charIndex--;

                                                            return AphidTokenType.Identifier;
                                                        }
                                                    }
                                                    while (NextChar());

                                                    if (state == 1)
                                                    {
                                                        return AphidTokenType.Identifier;
                                                    }

                                                    break;

                                            }

                                            charIndex--;
                                        }

                                        if (!NextChar())
                                        {
                                            return AphidTokenType.Identifier;
                                        }

                                        state = 0;

                                        do
                                        {
                                            if (((currentChar >= 'a' && currentChar <= 'z') ||
                                                (currentChar >= 'A' && currentChar <= 'Z') ||
                                                (currentChar >= '0' && currentChar <= '9') ||
                                                currentChar == '_' ||
                                                (currentChar >= '\u007f' && currentChar <= '\uffff')))
                                            {
                                                state = 1;
                                            }
                                            else if (state == 1)
                                            {
                                                charIndex--;

                                                return AphidTokenType.Identifier;
                                            }
                                            else
                                            {
                                                charIndex--;

                                                return AphidTokenType.Identifier;
                                            }
                                        }
                                        while (NextChar());

                                        if (state == 1)
                                        {
                                            return AphidTokenType.Identifier;
                                        }

                                        break;

                                    case 'x':
                                        if (charIndex < lastIndex)
                                        {
                                            currentChar = text[++charIndex];

                                            switch (currentChar)
                                            {
                                                case 't':
                                                    if (charIndex < lastIndex)
                                                    {
                                                        currentChar = text[++charIndex];

                                                        switch (currentChar)
                                                        {
                                                            case 'e':
                                                                if (charIndex < lastIndex)
                                                                {
                                                                    currentChar = text[++charIndex];

                                                                    switch (currentChar)
                                                                    {
                                                                        case 'n':
                                                                            if (charIndex < lastIndex)
                                                                            {
                                                                                currentChar = text[++charIndex];

                                                                                switch (currentChar)
                                                                                {
                                                                                    case 'd':


                                                                                        if (!NextChar())
                                                                                        {
                                                                                            return AphidTokenType.extendKeyword;
                                                                                        }

                                                                                        state = 0;

                                                                                        do
                                                                                        {
                                                                                            if (((currentChar >= 'a' && currentChar <= 'z') ||
                                                                                                (currentChar >= 'A' && currentChar <= 'Z') ||
                                                                                                (currentChar >= '0' && currentChar <= '9') ||
                                                                                                currentChar == '_' ||
                                                                                                (currentChar >= '\u007f' && currentChar <= '\uffff')))
                                                                                            {
                                                                                                state = 1;
                                                                                            }
                                                                                            else if (state == 1)
                                                                                            {
                                                                                                charIndex--;

                                                                                                return AphidTokenType.Identifier;
                                                                                            }
                                                                                            else
                                                                                            {
                                                                                                charIndex--;

                                                                                                return AphidTokenType.extendKeyword;
                                                                                            }
                                                                                        }
                                                                                        while (NextChar());

                                                                                        if (state == 1)
                                                                                        {
                                                                                            return AphidTokenType.Identifier;
                                                                                        }

                                                                                        break;

                                                                                }

                                                                                charIndex--;
                                                                            }

                                                                            if (!NextChar())
                                                                            {
                                                                                return AphidTokenType.Identifier;
                                                                            }

                                                                            state = 0;

                                                                            do
                                                                            {
                                                                                if (((currentChar >= 'a' && currentChar <= 'z') ||
                                                                                    (currentChar >= 'A' && currentChar <= 'Z') ||
                                                                                    (currentChar >= '0' && currentChar <= '9') ||
                                                                                    currentChar == '_' ||
                                                                                    (currentChar >= '\u007f' && currentChar <= '\uffff')))
                                                                                {
                                                                                    state = 1;
                                                                                }
                                                                                else if (state == 1)
                                                                                {
                                                                                    charIndex--;

                                                                                    return AphidTokenType.Identifier;
                                                                                }
                                                                                else
                                                                                {
                                                                                    charIndex--;

                                                                                    return AphidTokenType.Identifier;
                                                                                }
                                                                            }
                                                                            while (NextChar());

                                                                            if (state == 1)
                                                                            {
                                                                                return AphidTokenType.Identifier;
                                                                            }

                                                                            break;

                                                                    }

                                                                    charIndex--;
                                                                }

                                                                if (!NextChar())
                                                                {
                                                                    return AphidTokenType.Identifier;
                                                                }

                                                                state = 0;

                                                                do
                                                                {
                                                                    if (((currentChar >= 'a' && currentChar <= 'z') ||
                                                                        (currentChar >= 'A' && currentChar <= 'Z') ||
                                                                        (currentChar >= '0' && currentChar <= '9') ||
                                                                        currentChar == '_' ||
                                                                        (currentChar >= '\u007f' && currentChar <= '\uffff')))
                                                                    {
                                                                        state = 1;
                                                                    }
                                                                    else if (state == 1)
                                                                    {
                                                                        charIndex--;

                                                                        return AphidTokenType.Identifier;
                                                                    }
                                                                    else
                                                                    {
                                                                        charIndex--;

                                                                        return AphidTokenType.Identifier;
                                                                    }
                                                                }
                                                                while (NextChar());

                                                                if (state == 1)
                                                                {
                                                                    return AphidTokenType.Identifier;
                                                                }

                                                                break;

                                                        }

                                                        charIndex--;
                                                    }

                                                    if (!NextChar())
                                                    {
                                                        return AphidTokenType.Identifier;
                                                    }

                                                    state = 0;

                                                    do
                                                    {
                                                        if (((currentChar >= 'a' && currentChar <= 'z') ||
                                                            (currentChar >= 'A' && currentChar <= 'Z') ||
                                                            (currentChar >= '0' && currentChar <= '9') ||
                                                            currentChar == '_' ||
                                                            (currentChar >= '\u007f' && currentChar <= '\uffff')))
                                                        {
                                                            state = 1;
                                                        }
                                                        else if (state == 1)
                                                        {
                                                            charIndex--;

                                                            return AphidTokenType.Identifier;
                                                        }
                                                        else
                                                        {
                                                            charIndex--;

                                                            return AphidTokenType.Identifier;
                                                        }
                                                    }
                                                    while (NextChar());

                                                    if (state == 1)
                                                    {
                                                        return AphidTokenType.Identifier;
                                                    }

                                                    break;

                                            }

                                            charIndex--;
                                        }

                                        if (!NextChar())
                                        {
                                            return AphidTokenType.Identifier;
                                        }

                                        state = 0;

                                        do
                                        {
                                            if (((currentChar >= 'a' && currentChar <= 'z') ||
                                                (currentChar >= 'A' && currentChar <= 'Z') ||
                                                (currentChar >= '0' && currentChar <= '9') ||
                                                currentChar == '_' ||
                                                (currentChar >= '\u007f' && currentChar <= '\uffff')))
                                            {
                                                state = 1;
                                            }
                                            else if (state == 1)
                                            {
                                                charIndex--;

                                                return AphidTokenType.Identifier;
                                            }
                                            else
                                            {
                                                charIndex--;

                                                return AphidTokenType.Identifier;
                                            }
                                        }
                                        while (NextChar());

                                        if (state == 1)
                                        {
                                            return AphidTokenType.Identifier;
                                        }

                                        break;

                                }

                                charIndex--;
                            }

                            if (!NextChar())
                            {
                                return AphidTokenType.Identifier;
                            }

                            state = 0;

                            do
                            {
                                if (((currentChar >= 'a' && currentChar <= 'z') ||
                                    (currentChar >= 'A' && currentChar <= 'Z') ||
                                    (currentChar >= '0' && currentChar <= '9') ||
                                    currentChar == '_' ||
                                    (currentChar >= '\u007f' && currentChar <= '\uffff')))
                                {
                                    state = 1;
                                }
                                else if (state == 1)
                                {
                                    charIndex--;

                                    return AphidTokenType.Identifier;
                                }
                                else
                                {
                                    charIndex--;

                                    return AphidTokenType.Identifier;
                                }
                            }
                            while (NextChar());

                            if (state == 1)
                            {
                                return AphidTokenType.Identifier;
                            }

                            break;

                        case 's':
                            if (charIndex < lastIndex)
                            {
                                currentChar = text[++charIndex];

                                switch (currentChar)
                                {
                                    case 'w':
                                        if (charIndex < lastIndex)
                                        {
                                            currentChar = text[++charIndex];

                                            switch (currentChar)
                                            {
                                                case 'i':
                                                    if (charIndex < lastIndex)
                                                    {
                                                        currentChar = text[++charIndex];

                                                        switch (currentChar)
                                                        {
                                                            case 't':
                                                                if (charIndex < lastIndex)
                                                                {
                                                                    currentChar = text[++charIndex];

                                                                    switch (currentChar)
                                                                    {
                                                                        case 'c':
                                                                            if (charIndex < lastIndex)
                                                                            {
                                                                                currentChar = text[++charIndex];

                                                                                switch (currentChar)
                                                                                {
                                                                                    case 'h':


                                                                                        if (!NextChar())
                                                                                        {
                                                                                            return AphidTokenType.switchKeyword;
                                                                                        }

                                                                                        state = 0;

                                                                                        do
                                                                                        {
                                                                                            if (((currentChar >= 'a' && currentChar <= 'z') ||
                                                                                                (currentChar >= 'A' && currentChar <= 'Z') ||
                                                                                                (currentChar >= '0' && currentChar <= '9') ||
                                                                                                currentChar == '_' ||
                                                                                                (currentChar >= '\u007f' && currentChar <= '\uffff')))
                                                                                            {
                                                                                                state = 1;
                                                                                            }
                                                                                            else if (state == 1)
                                                                                            {
                                                                                                charIndex--;

                                                                                                return AphidTokenType.Identifier;
                                                                                            }
                                                                                            else
                                                                                            {
                                                                                                charIndex--;

                                                                                                return AphidTokenType.switchKeyword;
                                                                                            }
                                                                                        }
                                                                                        while (NextChar());

                                                                                        if (state == 1)
                                                                                        {
                                                                                            return AphidTokenType.Identifier;
                                                                                        }

                                                                                        break;

                                                                                }

                                                                                charIndex--;
                                                                            }

                                                                            if (!NextChar())
                                                                            {
                                                                                return AphidTokenType.Identifier;
                                                                            }

                                                                            state = 0;

                                                                            do
                                                                            {
                                                                                if (((currentChar >= 'a' && currentChar <= 'z') ||
                                                                                    (currentChar >= 'A' && currentChar <= 'Z') ||
                                                                                    (currentChar >= '0' && currentChar <= '9') ||
                                                                                    currentChar == '_' ||
                                                                                    (currentChar >= '\u007f' && currentChar <= '\uffff')))
                                                                                {
                                                                                    state = 1;
                                                                                }
                                                                                else if (state == 1)
                                                                                {
                                                                                    charIndex--;

                                                                                    return AphidTokenType.Identifier;
                                                                                }
                                                                                else
                                                                                {
                                                                                    charIndex--;

                                                                                    return AphidTokenType.Identifier;
                                                                                }
                                                                            }
                                                                            while (NextChar());

                                                                            if (state == 1)
                                                                            {
                                                                                return AphidTokenType.Identifier;
                                                                            }

                                                                            break;

                                                                    }

                                                                    charIndex--;
                                                                }

                                                                if (!NextChar())
                                                                {
                                                                    return AphidTokenType.Identifier;
                                                                }

                                                                state = 0;

                                                                do
                                                                {
                                                                    if (((currentChar >= 'a' && currentChar <= 'z') ||
                                                                        (currentChar >= 'A' && currentChar <= 'Z') ||
                                                                        (currentChar >= '0' && currentChar <= '9') ||
                                                                        currentChar == '_' ||
                                                                        (currentChar >= '\u007f' && currentChar <= '\uffff')))
                                                                    {
                                                                        state = 1;
                                                                    }
                                                                    else if (state == 1)
                                                                    {
                                                                        charIndex--;

                                                                        return AphidTokenType.Identifier;
                                                                    }
                                                                    else
                                                                    {
                                                                        charIndex--;

                                                                        return AphidTokenType.Identifier;
                                                                    }
                                                                }
                                                                while (NextChar());

                                                                if (state == 1)
                                                                {
                                                                    return AphidTokenType.Identifier;
                                                                }

                                                                break;

                                                        }

                                                        charIndex--;
                                                    }

                                                    if (!NextChar())
                                                    {
                                                        return AphidTokenType.Identifier;
                                                    }

                                                    state = 0;

                                                    do
                                                    {
                                                        if (((currentChar >= 'a' && currentChar <= 'z') ||
                                                            (currentChar >= 'A' && currentChar <= 'Z') ||
                                                            (currentChar >= '0' && currentChar <= '9') ||
                                                            currentChar == '_' ||
                                                            (currentChar >= '\u007f' && currentChar <= '\uffff')))
                                                        {
                                                            state = 1;
                                                        }
                                                        else if (state == 1)
                                                        {
                                                            charIndex--;

                                                            return AphidTokenType.Identifier;
                                                        }
                                                        else
                                                        {
                                                            charIndex--;

                                                            return AphidTokenType.Identifier;
                                                        }
                                                    }
                                                    while (NextChar());

                                                    if (state == 1)
                                                    {
                                                        return AphidTokenType.Identifier;
                                                    }

                                                    break;

                                            }

                                            charIndex--;
                                        }

                                        if (!NextChar())
                                        {
                                            return AphidTokenType.Identifier;
                                        }

                                        state = 0;

                                        do
                                        {
                                            if (((currentChar >= 'a' && currentChar <= 'z') ||
                                                (currentChar >= 'A' && currentChar <= 'Z') ||
                                                (currentChar >= '0' && currentChar <= '9') ||
                                                currentChar == '_' ||
                                                (currentChar >= '\u007f' && currentChar <= '\uffff')))
                                            {
                                                state = 1;
                                            }
                                            else if (state == 1)
                                            {
                                                charIndex--;

                                                return AphidTokenType.Identifier;
                                            }
                                            else
                                            {
                                                charIndex--;

                                                return AphidTokenType.Identifier;
                                            }
                                        }
                                        while (NextChar());

                                        if (state == 1)
                                        {
                                            return AphidTokenType.Identifier;
                                        }

                                        break;

                                }

                                charIndex--;
                            }

                            if (!NextChar())
                            {
                                return AphidTokenType.Identifier;
                            }

                            state = 0;

                            do
                            {
                                if (((currentChar >= 'a' && currentChar <= 'z') ||
                                    (currentChar >= 'A' && currentChar <= 'Z') ||
                                    (currentChar >= '0' && currentChar <= '9') ||
                                    currentChar == '_' ||
                                    (currentChar >= '\u007f' && currentChar <= '\uffff')))
                                {
                                    state = 1;
                                }
                                else if (state == 1)
                                {
                                    charIndex--;

                                    return AphidTokenType.Identifier;
                                }
                                else
                                {
                                    charIndex--;

                                    return AphidTokenType.Identifier;
                                }
                            }
                            while (NextChar());

                            if (state == 1)
                            {
                                return AphidTokenType.Identifier;
                            }

                            break;

                        case 'd':
                            if (charIndex < lastIndex)
                            {
                                currentChar = text[++charIndex];

                                switch (currentChar)
                                {
                                    case 'e':
                                        if (charIndex < lastIndex)
                                        {
                                            currentChar = text[++charIndex];

                                            switch (currentChar)
                                            {
                                                case 'f':
                                                    if (charIndex < lastIndex)
                                                    {
                                                        currentChar = text[++charIndex];

                                                        switch (currentChar)
                                                        {
                                                            case 'a':
                                                                if (charIndex < lastIndex)
                                                                {
                                                                    currentChar = text[++charIndex];

                                                                    switch (currentChar)
                                                                    {
                                                                        case 'u':
                                                                            if (charIndex < lastIndex)
                                                                            {
                                                                                currentChar = text[++charIndex];

                                                                                switch (currentChar)
                                                                                {
                                                                                    case 'l':
                                                                                        if (charIndex < lastIndex)
                                                                                        {
                                                                                            currentChar = text[++charIndex];

                                                                                            switch (currentChar)
                                                                                            {
                                                                                                case 't':


                                                                                                    if (!NextChar())
                                                                                                    {
                                                                                                        return AphidTokenType.defaultKeyword;
                                                                                                    }

                                                                                                    state = 0;

                                                                                                    do
                                                                                                    {
                                                                                                        if (((currentChar >= 'a' && currentChar <= 'z') ||
                                                                                                            (currentChar >= 'A' && currentChar <= 'Z') ||
                                                                                                            (currentChar >= '0' && currentChar <= '9') ||
                                                                                                            currentChar == '_' ||
                                                                                                            (currentChar >= '\u007f' && currentChar <= '\uffff')))
                                                                                                        {
                                                                                                            state = 1;
                                                                                                        }
                                                                                                        else if (state == 1)
                                                                                                        {
                                                                                                            charIndex--;

                                                                                                            return AphidTokenType.Identifier;
                                                                                                        }
                                                                                                        else
                                                                                                        {
                                                                                                            charIndex--;

                                                                                                            return AphidTokenType.defaultKeyword;
                                                                                                        }
                                                                                                    }
                                                                                                    while (NextChar());

                                                                                                    if (state == 1)
                                                                                                    {
                                                                                                        return AphidTokenType.Identifier;
                                                                                                    }

                                                                                                    break;

                                                                                            }

                                                                                            charIndex--;
                                                                                        }

                                                                                        if (!NextChar())
                                                                                        {
                                                                                            return AphidTokenType.Identifier;
                                                                                        }

                                                                                        state = 0;

                                                                                        do
                                                                                        {
                                                                                            if (((currentChar >= 'a' && currentChar <= 'z') ||
                                                                                                (currentChar >= 'A' && currentChar <= 'Z') ||
                                                                                                (currentChar >= '0' && currentChar <= '9') ||
                                                                                                currentChar == '_' ||
                                                                                                (currentChar >= '\u007f' && currentChar <= '\uffff')))
                                                                                            {
                                                                                                state = 1;
                                                                                            }
                                                                                            else if (state == 1)
                                                                                            {
                                                                                                charIndex--;

                                                                                                return AphidTokenType.Identifier;
                                                                                            }
                                                                                            else
                                                                                            {
                                                                                                charIndex--;

                                                                                                return AphidTokenType.Identifier;
                                                                                            }
                                                                                        }
                                                                                        while (NextChar());

                                                                                        if (state == 1)
                                                                                        {
                                                                                            return AphidTokenType.Identifier;
                                                                                        }

                                                                                        break;

                                                                                }

                                                                                charIndex--;
                                                                            }

                                                                            if (!NextChar())
                                                                            {
                                                                                return AphidTokenType.Identifier;
                                                                            }

                                                                            state = 0;

                                                                            do
                                                                            {
                                                                                if (((currentChar >= 'a' && currentChar <= 'z') ||
                                                                                    (currentChar >= 'A' && currentChar <= 'Z') ||
                                                                                    (currentChar >= '0' && currentChar <= '9') ||
                                                                                    currentChar == '_' ||
                                                                                    (currentChar >= '\u007f' && currentChar <= '\uffff')))
                                                                                {
                                                                                    state = 1;
                                                                                }
                                                                                else if (state == 1)
                                                                                {
                                                                                    charIndex--;

                                                                                    return AphidTokenType.Identifier;
                                                                                }
                                                                                else
                                                                                {
                                                                                    charIndex--;

                                                                                    return AphidTokenType.Identifier;
                                                                                }
                                                                            }
                                                                            while (NextChar());

                                                                            if (state == 1)
                                                                            {
                                                                                return AphidTokenType.Identifier;
                                                                            }

                                                                            break;

                                                                    }

                                                                    charIndex--;
                                                                }

                                                                if (!NextChar())
                                                                {
                                                                    return AphidTokenType.Identifier;
                                                                }

                                                                state = 0;

                                                                do
                                                                {
                                                                    if (((currentChar >= 'a' && currentChar <= 'z') ||
                                                                        (currentChar >= 'A' && currentChar <= 'Z') ||
                                                                        (currentChar >= '0' && currentChar <= '9') ||
                                                                        currentChar == '_' ||
                                                                        (currentChar >= '\u007f' && currentChar <= '\uffff')))
                                                                    {
                                                                        state = 1;
                                                                    }
                                                                    else if (state == 1)
                                                                    {
                                                                        charIndex--;

                                                                        return AphidTokenType.Identifier;
                                                                    }
                                                                    else
                                                                    {
                                                                        charIndex--;

                                                                        return AphidTokenType.Identifier;
                                                                    }
                                                                }
                                                                while (NextChar());

                                                                if (state == 1)
                                                                {
                                                                    return AphidTokenType.Identifier;
                                                                }

                                                                break;

                                                            case 'i':
                                                                if (charIndex < lastIndex)
                                                                {
                                                                    currentChar = text[++charIndex];

                                                                    switch (currentChar)
                                                                    {
                                                                        case 'n':
                                                                            if (charIndex < lastIndex)
                                                                            {
                                                                                currentChar = text[++charIndex];

                                                                                switch (currentChar)
                                                                                {
                                                                                    case 'e':
                                                                                        if (charIndex < lastIndex)
                                                                                        {
                                                                                            currentChar = text[++charIndex];

                                                                                            switch (currentChar)
                                                                                            {
                                                                                                case 'd':


                                                                                                    if (!NextChar())
                                                                                                    {
                                                                                                        return AphidTokenType.definedKeyword;
                                                                                                    }

                                                                                                    state = 0;

                                                                                                    do
                                                                                                    {
                                                                                                        if (((currentChar >= 'a' && currentChar <= 'z') ||
                                                                                                            (currentChar >= 'A' && currentChar <= 'Z') ||
                                                                                                            (currentChar >= '0' && currentChar <= '9') ||
                                                                                                            currentChar == '_' ||
                                                                                                            (currentChar >= '\u007f' && currentChar <= '\uffff')))
                                                                                                        {
                                                                                                            state = 1;
                                                                                                        }
                                                                                                        else if (state == 1)
                                                                                                        {
                                                                                                            charIndex--;

                                                                                                            return AphidTokenType.Identifier;
                                                                                                        }
                                                                                                        else
                                                                                                        {
                                                                                                            charIndex--;

                                                                                                            return AphidTokenType.definedKeyword;
                                                                                                        }
                                                                                                    }
                                                                                                    while (NextChar());

                                                                                                    if (state == 1)
                                                                                                    {
                                                                                                        return AphidTokenType.Identifier;
                                                                                                    }

                                                                                                    break;

                                                                                            }

                                                                                            charIndex--;
                                                                                        }

                                                                                        if (!NextChar())
                                                                                        {
                                                                                            return AphidTokenType.Identifier;
                                                                                        }

                                                                                        state = 0;

                                                                                        do
                                                                                        {
                                                                                            if (((currentChar >= 'a' && currentChar <= 'z') ||
                                                                                                (currentChar >= 'A' && currentChar <= 'Z') ||
                                                                                                (currentChar >= '0' && currentChar <= '9') ||
                                                                                                currentChar == '_' ||
                                                                                                (currentChar >= '\u007f' && currentChar <= '\uffff')))
                                                                                            {
                                                                                                state = 1;
                                                                                            }
                                                                                            else if (state == 1)
                                                                                            {
                                                                                                charIndex--;

                                                                                                return AphidTokenType.Identifier;
                                                                                            }
                                                                                            else
                                                                                            {
                                                                                                charIndex--;

                                                                                                return AphidTokenType.Identifier;
                                                                                            }
                                                                                        }
                                                                                        while (NextChar());

                                                                                        if (state == 1)
                                                                                        {
                                                                                            return AphidTokenType.Identifier;
                                                                                        }

                                                                                        break;

                                                                                }

                                                                                charIndex--;
                                                                            }

                                                                            if (!NextChar())
                                                                            {
                                                                                return AphidTokenType.Identifier;
                                                                            }

                                                                            state = 0;

                                                                            do
                                                                            {
                                                                                if (((currentChar >= 'a' && currentChar <= 'z') ||
                                                                                    (currentChar >= 'A' && currentChar <= 'Z') ||
                                                                                    (currentChar >= '0' && currentChar <= '9') ||
                                                                                    currentChar == '_' ||
                                                                                    (currentChar >= '\u007f' && currentChar <= '\uffff')))
                                                                                {
                                                                                    state = 1;
                                                                                }
                                                                                else if (state == 1)
                                                                                {
                                                                                    charIndex--;

                                                                                    return AphidTokenType.Identifier;
                                                                                }
                                                                                else
                                                                                {
                                                                                    charIndex--;

                                                                                    return AphidTokenType.Identifier;
                                                                                }
                                                                            }
                                                                            while (NextChar());

                                                                            if (state == 1)
                                                                            {
                                                                                return AphidTokenType.Identifier;
                                                                            }

                                                                            break;

                                                                    }

                                                                    charIndex--;
                                                                }

                                                                if (!NextChar())
                                                                {
                                                                    return AphidTokenType.Identifier;
                                                                }

                                                                state = 0;

                                                                do
                                                                {
                                                                    if (((currentChar >= 'a' && currentChar <= 'z') ||
                                                                        (currentChar >= 'A' && currentChar <= 'Z') ||
                                                                        (currentChar >= '0' && currentChar <= '9') ||
                                                                        currentChar == '_' ||
                                                                        (currentChar >= '\u007f' && currentChar <= '\uffff')))
                                                                    {
                                                                        state = 1;
                                                                    }
                                                                    else if (state == 1)
                                                                    {
                                                                        charIndex--;

                                                                        return AphidTokenType.Identifier;
                                                                    }
                                                                    else
                                                                    {
                                                                        charIndex--;

                                                                        return AphidTokenType.Identifier;
                                                                    }
                                                                }
                                                                while (NextChar());

                                                                if (state == 1)
                                                                {
                                                                    return AphidTokenType.Identifier;
                                                                }

                                                                break;

                                                        }

                                                        charIndex--;
                                                    }

                                                    if (!NextChar())
                                                    {
                                                        return AphidTokenType.Identifier;
                                                    }

                                                    state = 0;

                                                    do
                                                    {
                                                        if (((currentChar >= 'a' && currentChar <= 'z') ||
                                                            (currentChar >= 'A' && currentChar <= 'Z') ||
                                                            (currentChar >= '0' && currentChar <= '9') ||
                                                            currentChar == '_' ||
                                                            (currentChar >= '\u007f' && currentChar <= '\uffff')))
                                                        {
                                                            state = 1;
                                                        }
                                                        else if (state == 1)
                                                        {
                                                            charIndex--;

                                                            return AphidTokenType.Identifier;
                                                        }
                                                        else
                                                        {
                                                            charIndex--;

                                                            return AphidTokenType.Identifier;
                                                        }
                                                    }
                                                    while (NextChar());

                                                    if (state == 1)
                                                    {
                                                        return AphidTokenType.Identifier;
                                                    }

                                                    break;

                                                case 'l':
                                                    if (charIndex < lastIndex)
                                                    {
                                                        currentChar = text[++charIndex];

                                                        switch (currentChar)
                                                        {
                                                            case 'e':
                                                                if (charIndex < lastIndex)
                                                                {
                                                                    currentChar = text[++charIndex];

                                                                    switch (currentChar)
                                                                    {
                                                                        case 't':
                                                                            if (charIndex < lastIndex)
                                                                            {
                                                                                currentChar = text[++charIndex];

                                                                                switch (currentChar)
                                                                                {
                                                                                    case 'e':


                                                                                        if (!NextChar())
                                                                                        {
                                                                                            return AphidTokenType.deleteKeyword;
                                                                                        }

                                                                                        state = 0;

                                                                                        do
                                                                                        {
                                                                                            if (((currentChar >= 'a' && currentChar <= 'z') ||
                                                                                                (currentChar >= 'A' && currentChar <= 'Z') ||
                                                                                                (currentChar >= '0' && currentChar <= '9') ||
                                                                                                currentChar == '_' ||
                                                                                                (currentChar >= '\u007f' && currentChar <= '\uffff')))
                                                                                            {
                                                                                                state = 1;
                                                                                            }
                                                                                            else if (state == 1)
                                                                                            {
                                                                                                charIndex--;

                                                                                                return AphidTokenType.Identifier;
                                                                                            }
                                                                                            else
                                                                                            {
                                                                                                charIndex--;

                                                                                                return AphidTokenType.deleteKeyword;
                                                                                            }
                                                                                        }
                                                                                        while (NextChar());

                                                                                        if (state == 1)
                                                                                        {
                                                                                            return AphidTokenType.Identifier;
                                                                                        }

                                                                                        break;

                                                                                }

                                                                                charIndex--;
                                                                            }

                                                                            if (!NextChar())
                                                                            {
                                                                                return AphidTokenType.Identifier;
                                                                            }

                                                                            state = 0;

                                                                            do
                                                                            {
                                                                                if (((currentChar >= 'a' && currentChar <= 'z') ||
                                                                                    (currentChar >= 'A' && currentChar <= 'Z') ||
                                                                                    (currentChar >= '0' && currentChar <= '9') ||
                                                                                    currentChar == '_' ||
                                                                                    (currentChar >= '\u007f' && currentChar <= '\uffff')))
                                                                                {
                                                                                    state = 1;
                                                                                }
                                                                                else if (state == 1)
                                                                                {
                                                                                    charIndex--;

                                                                                    return AphidTokenType.Identifier;
                                                                                }
                                                                                else
                                                                                {
                                                                                    charIndex--;

                                                                                    return AphidTokenType.Identifier;
                                                                                }
                                                                            }
                                                                            while (NextChar());

                                                                            if (state == 1)
                                                                            {
                                                                                return AphidTokenType.Identifier;
                                                                            }

                                                                            break;

                                                                    }

                                                                    charIndex--;
                                                                }

                                                                if (!NextChar())
                                                                {
                                                                    return AphidTokenType.Identifier;
                                                                }

                                                                state = 0;

                                                                do
                                                                {
                                                                    if (((currentChar >= 'a' && currentChar <= 'z') ||
                                                                        (currentChar >= 'A' && currentChar <= 'Z') ||
                                                                        (currentChar >= '0' && currentChar <= '9') ||
                                                                        currentChar == '_' ||
                                                                        (currentChar >= '\u007f' && currentChar <= '\uffff')))
                                                                    {
                                                                        state = 1;
                                                                    }
                                                                    else if (state == 1)
                                                                    {
                                                                        charIndex--;

                                                                        return AphidTokenType.Identifier;
                                                                    }
                                                                    else
                                                                    {
                                                                        charIndex--;

                                                                        return AphidTokenType.Identifier;
                                                                    }
                                                                }
                                                                while (NextChar());

                                                                if (state == 1)
                                                                {
                                                                    return AphidTokenType.Identifier;
                                                                }

                                                                break;

                                                        }

                                                        charIndex--;
                                                    }

                                                    if (!NextChar())
                                                    {
                                                        return AphidTokenType.Identifier;
                                                    }

                                                    state = 0;

                                                    do
                                                    {
                                                        if (((currentChar >= 'a' && currentChar <= 'z') ||
                                                            (currentChar >= 'A' && currentChar <= 'Z') ||
                                                            (currentChar >= '0' && currentChar <= '9') ||
                                                            currentChar == '_' ||
                                                            (currentChar >= '\u007f' && currentChar <= '\uffff')))
                                                        {
                                                            state = 1;
                                                        }
                                                        else if (state == 1)
                                                        {
                                                            charIndex--;

                                                            return AphidTokenType.Identifier;
                                                        }
                                                        else
                                                        {
                                                            charIndex--;

                                                            return AphidTokenType.Identifier;
                                                        }
                                                    }
                                                    while (NextChar());

                                                    if (state == 1)
                                                    {
                                                        return AphidTokenType.Identifier;
                                                    }

                                                    break;

                                            }

                                            charIndex--;
                                        }

                                        if (!NextChar())
                                        {
                                            return AphidTokenType.Identifier;
                                        }

                                        state = 0;

                                        do
                                        {
                                            if (((currentChar >= 'a' && currentChar <= 'z') ||
                                                (currentChar >= 'A' && currentChar <= 'Z') ||
                                                (currentChar >= '0' && currentChar <= '9') ||
                                                currentChar == '_' ||
                                                (currentChar >= '\u007f' && currentChar <= '\uffff')))
                                            {
                                                state = 1;
                                            }
                                            else if (state == 1)
                                            {
                                                charIndex--;

                                                return AphidTokenType.Identifier;
                                            }
                                            else
                                            {
                                                charIndex--;

                                                return AphidTokenType.Identifier;
                                            }
                                        }
                                        while (NextChar());

                                        if (state == 1)
                                        {
                                            return AphidTokenType.Identifier;
                                        }

                                        break;

                                }

                                charIndex--;
                            }

                            if (!NextChar())
                            {
                                return AphidTokenType.Identifier;
                            }

                            state = 0;

                            do
                            {
                                if (((currentChar >= 'a' && currentChar <= 'z') ||
                                    (currentChar >= 'A' && currentChar <= 'Z') ||
                                    (currentChar >= '0' && currentChar <= '9') ||
                                    currentChar == '_' ||
                                    (currentChar >= '\u007f' && currentChar <= '\uffff')))
                                {
                                    state = 1;
                                }
                                else if (state == 1)
                                {
                                    charIndex--;

                                    return AphidTokenType.Identifier;
                                }
                                else
                                {
                                    charIndex--;

                                    return AphidTokenType.Identifier;
                                }
                            }
                            while (NextChar());

                            if (state == 1)
                            {
                                return AphidTokenType.Identifier;
                            }

                            break;

                        case 'w':
                            if (charIndex < lastIndex)
                            {
                                currentChar = text[++charIndex];

                                switch (currentChar)
                                {
                                    case 'h':
                                        if (charIndex < lastIndex)
                                        {
                                            currentChar = text[++charIndex];

                                            switch (currentChar)
                                            {
                                                case 'i':
                                                    if (charIndex < lastIndex)
                                                    {
                                                        currentChar = text[++charIndex];

                                                        switch (currentChar)
                                                        {
                                                            case 'l':
                                                                if (charIndex < lastIndex)
                                                                {
                                                                    currentChar = text[++charIndex];

                                                                    switch (currentChar)
                                                                    {
                                                                        case 'e':


                                                                            if (!NextChar())
                                                                            {
                                                                                return AphidTokenType.whileKeyword;
                                                                            }

                                                                            state = 0;

                                                                            do
                                                                            {
                                                                                if (((currentChar >= 'a' && currentChar <= 'z') ||
                                                                                    (currentChar >= 'A' && currentChar <= 'Z') ||
                                                                                    (currentChar >= '0' && currentChar <= '9') ||
                                                                                    currentChar == '_' ||
                                                                                    (currentChar >= '\u007f' && currentChar <= '\uffff')))
                                                                                {
                                                                                    state = 1;
                                                                                }
                                                                                else if (state == 1)
                                                                                {
                                                                                    charIndex--;

                                                                                    return AphidTokenType.Identifier;
                                                                                }
                                                                                else
                                                                                {
                                                                                    charIndex--;

                                                                                    return AphidTokenType.whileKeyword;
                                                                                }
                                                                            }
                                                                            while (NextChar());

                                                                            if (state == 1)
                                                                            {
                                                                                return AphidTokenType.Identifier;
                                                                            }

                                                                            break;

                                                                    }

                                                                    charIndex--;
                                                                }

                                                                if (!NextChar())
                                                                {
                                                                    return AphidTokenType.Identifier;
                                                                }

                                                                state = 0;

                                                                do
                                                                {
                                                                    if (((currentChar >= 'a' && currentChar <= 'z') ||
                                                                        (currentChar >= 'A' && currentChar <= 'Z') ||
                                                                        (currentChar >= '0' && currentChar <= '9') ||
                                                                        currentChar == '_' ||
                                                                        (currentChar >= '\u007f' && currentChar <= '\uffff')))
                                                                    {
                                                                        state = 1;
                                                                    }
                                                                    else if (state == 1)
                                                                    {
                                                                        charIndex--;

                                                                        return AphidTokenType.Identifier;
                                                                    }
                                                                    else
                                                                    {
                                                                        charIndex--;

                                                                        return AphidTokenType.Identifier;
                                                                    }
                                                                }
                                                                while (NextChar());

                                                                if (state == 1)
                                                                {
                                                                    return AphidTokenType.Identifier;
                                                                }

                                                                break;

                                                        }

                                                        charIndex--;
                                                    }

                                                    if (!NextChar())
                                                    {
                                                        return AphidTokenType.Identifier;
                                                    }

                                                    state = 0;

                                                    do
                                                    {
                                                        if (((currentChar >= 'a' && currentChar <= 'z') ||
                                                            (currentChar >= 'A' && currentChar <= 'Z') ||
                                                            (currentChar >= '0' && currentChar <= '9') ||
                                                            currentChar == '_' ||
                                                            (currentChar >= '\u007f' && currentChar <= '\uffff')))
                                                        {
                                                            state = 1;
                                                        }
                                                        else if (state == 1)
                                                        {
                                                            charIndex--;

                                                            return AphidTokenType.Identifier;
                                                        }
                                                        else
                                                        {
                                                            charIndex--;

                                                            return AphidTokenType.Identifier;
                                                        }
                                                    }
                                                    while (NextChar());

                                                    if (state == 1)
                                                    {
                                                        return AphidTokenType.Identifier;
                                                    }

                                                    break;

                                            }

                                            charIndex--;
                                        }

                                        if (!NextChar())
                                        {
                                            return AphidTokenType.Identifier;
                                        }

                                        state = 0;

                                        do
                                        {
                                            if (((currentChar >= 'a' && currentChar <= 'z') ||
                                                (currentChar >= 'A' && currentChar <= 'Z') ||
                                                (currentChar >= '0' && currentChar <= '9') ||
                                                currentChar == '_' ||
                                                (currentChar >= '\u007f' && currentChar <= '\uffff')))
                                            {
                                                state = 1;
                                            }
                                            else if (state == 1)
                                            {
                                                charIndex--;

                                                return AphidTokenType.Identifier;
                                            }
                                            else
                                            {
                                                charIndex--;

                                                return AphidTokenType.Identifier;
                                            }
                                        }
                                        while (NextChar());

                                        if (state == 1)
                                        {
                                            return AphidTokenType.Identifier;
                                        }

                                        break;

                                }

                                charIndex--;
                            }

                            if (!NextChar())
                            {
                                return AphidTokenType.Identifier;
                            }

                            state = 0;

                            do
                            {
                                if (((currentChar >= 'a' && currentChar <= 'z') ||
                                    (currentChar >= 'A' && currentChar <= 'Z') ||
                                    (currentChar >= '0' && currentChar <= '9') ||
                                    currentChar == '_' ||
                                    (currentChar >= '\u007f' && currentChar <= '\uffff')))
                                {
                                    state = 1;
                                }
                                else if (state == 1)
                                {
                                    charIndex--;

                                    return AphidTokenType.Identifier;
                                }
                                else
                                {
                                    charIndex--;

                                    return AphidTokenType.Identifier;
                                }
                            }
                            while (NextChar());

                            if (state == 1)
                            {
                                return AphidTokenType.Identifier;
                            }

                            break;

                        case 'b':
                            if (charIndex < lastIndex)
                            {
                                currentChar = text[++charIndex];

                                switch (currentChar)
                                {
                                    case 'r':
                                        if (charIndex < lastIndex)
                                        {
                                            currentChar = text[++charIndex];

                                            switch (currentChar)
                                            {
                                                case 'e':
                                                    if (charIndex < lastIndex)
                                                    {
                                                        currentChar = text[++charIndex];

                                                        switch (currentChar)
                                                        {
                                                            case 'a':
                                                                if (charIndex < lastIndex)
                                                                {
                                                                    currentChar = text[++charIndex];

                                                                    switch (currentChar)
                                                                    {
                                                                        case 'k':


                                                                            if (!NextChar())
                                                                            {
                                                                                return AphidTokenType.breakKeyword;
                                                                            }

                                                                            state = 0;

                                                                            do
                                                                            {
                                                                                if (((currentChar >= 'a' && currentChar <= 'z') ||
                                                                                    (currentChar >= 'A' && currentChar <= 'Z') ||
                                                                                    (currentChar >= '0' && currentChar <= '9') ||
                                                                                    currentChar == '_' ||
                                                                                    (currentChar >= '\u007f' && currentChar <= '\uffff')))
                                                                                {
                                                                                    state = 1;
                                                                                }
                                                                                else if (state == 1)
                                                                                {
                                                                                    charIndex--;

                                                                                    return AphidTokenType.Identifier;
                                                                                }
                                                                                else
                                                                                {
                                                                                    charIndex--;

                                                                                    return AphidTokenType.breakKeyword;
                                                                                }
                                                                            }
                                                                            while (NextChar());

                                                                            if (state == 1)
                                                                            {
                                                                                return AphidTokenType.Identifier;
                                                                            }

                                                                            break;

                                                                    }

                                                                    charIndex--;
                                                                }

                                                                if (!NextChar())
                                                                {
                                                                    return AphidTokenType.Identifier;
                                                                }

                                                                state = 0;

                                                                do
                                                                {
                                                                    if (((currentChar >= 'a' && currentChar <= 'z') ||
                                                                        (currentChar >= 'A' && currentChar <= 'Z') ||
                                                                        (currentChar >= '0' && currentChar <= '9') ||
                                                                        currentChar == '_' ||
                                                                        (currentChar >= '\u007f' && currentChar <= '\uffff')))
                                                                    {
                                                                        state = 1;
                                                                    }
                                                                    else if (state == 1)
                                                                    {
                                                                        charIndex--;

                                                                        return AphidTokenType.Identifier;
                                                                    }
                                                                    else
                                                                    {
                                                                        charIndex--;

                                                                        return AphidTokenType.Identifier;
                                                                    }
                                                                }
                                                                while (NextChar());

                                                                if (state == 1)
                                                                {
                                                                    return AphidTokenType.Identifier;
                                                                }

                                                                break;

                                                        }

                                                        charIndex--;
                                                    }

                                                    if (!NextChar())
                                                    {
                                                        return AphidTokenType.Identifier;
                                                    }

                                                    state = 0;

                                                    do
                                                    {
                                                        if (((currentChar >= 'a' && currentChar <= 'z') ||
                                                            (currentChar >= 'A' && currentChar <= 'Z') ||
                                                            (currentChar >= '0' && currentChar <= '9') ||
                                                            currentChar == '_' ||
                                                            (currentChar >= '\u007f' && currentChar <= '\uffff')))
                                                        {
                                                            state = 1;
                                                        }
                                                        else if (state == 1)
                                                        {
                                                            charIndex--;

                                                            return AphidTokenType.Identifier;
                                                        }
                                                        else
                                                        {
                                                            charIndex--;

                                                            return AphidTokenType.Identifier;
                                                        }
                                                    }
                                                    while (NextChar());

                                                    if (state == 1)
                                                    {
                                                        return AphidTokenType.Identifier;
                                                    }

                                                    break;

                                            }

                                            charIndex--;
                                        }

                                        if (!NextChar())
                                        {
                                            return AphidTokenType.Identifier;
                                        }

                                        state = 0;

                                        do
                                        {
                                            if (((currentChar >= 'a' && currentChar <= 'z') ||
                                                (currentChar >= 'A' && currentChar <= 'Z') ||
                                                (currentChar >= '0' && currentChar <= '9') ||
                                                currentChar == '_' ||
                                                (currentChar >= '\u007f' && currentChar <= '\uffff')))
                                            {
                                                state = 1;
                                            }
                                            else if (state == 1)
                                            {
                                                charIndex--;

                                                return AphidTokenType.Identifier;
                                            }
                                            else
                                            {
                                                charIndex--;

                                                return AphidTokenType.Identifier;
                                            }
                                        }
                                        while (NextChar());

                                        if (state == 1)
                                        {
                                            return AphidTokenType.Identifier;
                                        }

                                        break;

                                }

                                charIndex--;
                            }

                            if (!NextChar())
                            {
                                return AphidTokenType.Identifier;
                            }

                            state = 0;

                            do
                            {
                                if (((currentChar >= 'a' && currentChar <= 'z') ||
                                    (currentChar >= 'A' && currentChar <= 'Z') ||
                                    (currentChar >= '0' && currentChar <= '9') ||
                                    currentChar == '_' ||
                                    (currentChar >= '\u007f' && currentChar <= '\uffff')))
                                {
                                    state = 1;
                                }
                                else if (state == 1)
                                {
                                    charIndex--;

                                    return AphidTokenType.Identifier;
                                }
                                else
                                {
                                    charIndex--;

                                    return AphidTokenType.Identifier;
                                }
                            }
                            while (NextChar());

                            if (state == 1)
                            {
                                return AphidTokenType.Identifier;
                            }

                            break;

                        case 'r':
                            if (charIndex < lastIndex)
                            {
                                currentChar = text[++charIndex];

                                switch (currentChar)
                                {
                                    case 'e':
                                        if (charIndex < lastIndex)
                                        {
                                            currentChar = text[++charIndex];

                                            switch (currentChar)
                                            {
                                                case 't':


                                                    if (!NextChar())
                                                    {
                                                        return AphidTokenType.retKeyword;
                                                    }

                                                    state = 0;

                                                    do
                                                    {
                                                        if (((currentChar >= 'a' && currentChar <= 'z') ||
                                                            (currentChar >= 'A' && currentChar <= 'Z') ||
                                                            (currentChar >= '0' && currentChar <= '9') ||
                                                            currentChar == '_' ||
                                                            (currentChar >= '\u007f' && currentChar <= '\uffff')))
                                                        {
                                                            state = 1;
                                                        }
                                                        else if (state == 1)
                                                        {
                                                            charIndex--;

                                                            return AphidTokenType.Identifier;
                                                        }
                                                        else
                                                        {
                                                            charIndex--;

                                                            return AphidTokenType.retKeyword;
                                                        }
                                                    }
                                                    while (NextChar());

                                                    if (state == 1)
                                                    {
                                                        return AphidTokenType.Identifier;
                                                    }

                                                    break;

                                            }

                                            charIndex--;
                                        }

                                        if (!NextChar())
                                        {
                                            return AphidTokenType.Identifier;
                                        }

                                        state = 0;

                                        do
                                        {
                                            if (((currentChar >= 'a' && currentChar <= 'z') ||
                                                (currentChar >= 'A' && currentChar <= 'Z') ||
                                                (currentChar >= '0' && currentChar <= '9') ||
                                                currentChar == '_' ||
                                                (currentChar >= '\u007f' && currentChar <= '\uffff')))
                                            {
                                                state = 1;
                                            }
                                            else if (state == 1)
                                            {
                                                charIndex--;

                                                return AphidTokenType.Identifier;
                                            }
                                            else
                                            {
                                                charIndex--;

                                                return AphidTokenType.Identifier;
                                            }
                                        }
                                        while (NextChar());

                                        if (state == 1)
                                        {
                                            return AphidTokenType.Identifier;
                                        }

                                        break;

                                }

                                charIndex--;
                            }

                            if (!NextChar())
                            {
                                return AphidTokenType.Identifier;
                            }

                            state = 0;

                            do
                            {
                                if (((currentChar >= 'a' && currentChar <= 'z') ||
                                    (currentChar >= 'A' && currentChar <= 'Z') ||
                                    (currentChar >= '0' && currentChar <= '9') ||
                                    currentChar == '_' ||
                                    (currentChar >= '\u007f' && currentChar <= '\uffff')))
                                {
                                    state = 1;
                                }
                                else if (state == 1)
                                {
                                    charIndex--;

                                    return AphidTokenType.Identifier;
                                }
                                else
                                {
                                    charIndex--;

                                    return AphidTokenType.Identifier;
                                }
                            }
                            while (NextChar());

                            if (state == 1)
                            {
                                return AphidTokenType.Identifier;
                            }

                            break;

                        case 'c':
                            if (charIndex < lastIndex)
                            {
                                currentChar = text[++charIndex];

                                switch (currentChar)
                                {
                                    case 'a':
                                        if (charIndex < lastIndex)
                                        {
                                            currentChar = text[++charIndex];

                                            switch (currentChar)
                                            {
                                                case 't':
                                                    if (charIndex < lastIndex)
                                                    {
                                                        currentChar = text[++charIndex];

                                                        switch (currentChar)
                                                        {
                                                            case 'c':
                                                                if (charIndex < lastIndex)
                                                                {
                                                                    currentChar = text[++charIndex];

                                                                    switch (currentChar)
                                                                    {
                                                                        case 'h':


                                                                            if (!NextChar())
                                                                            {
                                                                                return AphidTokenType.catchKeyword;
                                                                            }

                                                                            state = 0;

                                                                            do
                                                                            {
                                                                                if (((currentChar >= 'a' && currentChar <= 'z') ||
                                                                                    (currentChar >= 'A' && currentChar <= 'Z') ||
                                                                                    (currentChar >= '0' && currentChar <= '9') ||
                                                                                    currentChar == '_' ||
                                                                                    (currentChar >= '\u007f' && currentChar <= '\uffff')))
                                                                                {
                                                                                    state = 1;
                                                                                }
                                                                                else if (state == 1)
                                                                                {
                                                                                    charIndex--;

                                                                                    return AphidTokenType.Identifier;
                                                                                }
                                                                                else
                                                                                {
                                                                                    charIndex--;

                                                                                    return AphidTokenType.catchKeyword;
                                                                                }
                                                                            }
                                                                            while (NextChar());

                                                                            if (state == 1)
                                                                            {
                                                                                return AphidTokenType.Identifier;
                                                                            }

                                                                            break;

                                                                    }

                                                                    charIndex--;
                                                                }

                                                                if (!NextChar())
                                                                {
                                                                    return AphidTokenType.Identifier;
                                                                }

                                                                state = 0;

                                                                do
                                                                {
                                                                    if (((currentChar >= 'a' && currentChar <= 'z') ||
                                                                        (currentChar >= 'A' && currentChar <= 'Z') ||
                                                                        (currentChar >= '0' && currentChar <= '9') ||
                                                                        currentChar == '_' ||
                                                                        (currentChar >= '\u007f' && currentChar <= '\uffff')))
                                                                    {
                                                                        state = 1;
                                                                    }
                                                                    else if (state == 1)
                                                                    {
                                                                        charIndex--;

                                                                        return AphidTokenType.Identifier;
                                                                    }
                                                                    else
                                                                    {
                                                                        charIndex--;

                                                                        return AphidTokenType.Identifier;
                                                                    }
                                                                }
                                                                while (NextChar());

                                                                if (state == 1)
                                                                {
                                                                    return AphidTokenType.Identifier;
                                                                }

                                                                break;

                                                        }

                                                        charIndex--;
                                                    }

                                                    if (!NextChar())
                                                    {
                                                        return AphidTokenType.Identifier;
                                                    }

                                                    state = 0;

                                                    do
                                                    {
                                                        if (((currentChar >= 'a' && currentChar <= 'z') ||
                                                            (currentChar >= 'A' && currentChar <= 'Z') ||
                                                            (currentChar >= '0' && currentChar <= '9') ||
                                                            currentChar == '_' ||
                                                            (currentChar >= '\u007f' && currentChar <= '\uffff')))
                                                        {
                                                            state = 1;
                                                        }
                                                        else if (state == 1)
                                                        {
                                                            charIndex--;

                                                            return AphidTokenType.Identifier;
                                                        }
                                                        else
                                                        {
                                                            charIndex--;

                                                            return AphidTokenType.Identifier;
                                                        }
                                                    }
                                                    while (NextChar());

                                                    if (state == 1)
                                                    {
                                                        return AphidTokenType.Identifier;
                                                    }

                                                    break;

                                            }

                                            charIndex--;
                                        }

                                        if (!NextChar())
                                        {
                                            return AphidTokenType.Identifier;
                                        }

                                        state = 0;

                                        do
                                        {
                                            if (((currentChar >= 'a' && currentChar <= 'z') ||
                                                (currentChar >= 'A' && currentChar <= 'Z') ||
                                                (currentChar >= '0' && currentChar <= '9') ||
                                                currentChar == '_' ||
                                                (currentChar >= '\u007f' && currentChar <= '\uffff')))
                                            {
                                                state = 1;
                                            }
                                            else if (state == 1)
                                            {
                                                charIndex--;

                                                return AphidTokenType.Identifier;
                                            }
                                            else
                                            {
                                                charIndex--;

                                                return AphidTokenType.Identifier;
                                            }
                                        }
                                        while (NextChar());

                                        if (state == 1)
                                        {
                                            return AphidTokenType.Identifier;
                                        }

                                        break;

                                }

                                charIndex--;
                            }

                            if (!NextChar())
                            {
                                return AphidTokenType.Identifier;
                            }

                            state = 0;

                            do
                            {
                                if (((currentChar >= 'a' && currentChar <= 'z') ||
                                    (currentChar >= 'A' && currentChar <= 'Z') ||
                                    (currentChar >= '0' && currentChar <= '9') ||
                                    currentChar == '_' ||
                                    (currentChar >= '\u007f' && currentChar <= '\uffff')))
                                {
                                    state = 1;
                                }
                                else if (state == 1)
                                {
                                    charIndex--;

                                    return AphidTokenType.Identifier;
                                }
                                else
                                {
                                    charIndex--;

                                    return AphidTokenType.Identifier;
                                }
                            }
                            while (NextChar());

                            if (state == 1)
                            {
                                return AphidTokenType.Identifier;
                            }

                            break;

                        default:

                            state = 0;

                            do
                            {
                                if (state == 0 &&
                                    ((currentChar >= 'a' && currentChar <= 'z') ||
                                    (currentChar >= 'A' && currentChar <= 'Z') ||
                                    currentChar == '_' ||
                                    (currentChar >= '\u007f' && currentChar <= '\uffff')))
                                    state = 1;
                                else if (state == 1 &&
                                    ((currentChar >= 'a' && currentChar <= 'z') ||
                                    (currentChar >= 'A' && currentChar <= 'Z') ||
                                    (currentChar >= '0' && currentChar <= '9') ||
                                    currentChar == '_' ||
                                    (currentChar >= '\u007f' && currentChar <= '\uffff')))
                                    state = 1;
                                else if (state == 1 || state == 2)
                                {
                                    charIndex--;

                                    return AphidTokenType.Identifier;
                                }
                                else
                                {
                                    break;
                                }
                            }
                            while (NextChar());

                            if (state == 1 || state == 2) // EOF Id
                            {
                                return AphidTokenType.Identifier;
                            }


                            state = 0;

                            do
                            {
                                if ((state == 0 || state == 1) && currentChar > 47 && currentChar < 58)
                                    state = 1;
                                else if (state == 1 && currentChar == '.')
                                    state = 2;
                                else if ((state == 2 || state == 3) && currentChar > 47 && currentChar < 58)
                                    state = 3;
                                else if ((state == 1 || state == 3) && (currentChar == 'E' || currentChar == 'e'))
                                {
                                    state = 4;
                                }
                                else if (state == 4 && (currentChar == '-' || currentChar == '+'))
                                {
                                    state = 6;
                                }
                                else if (state == 4 && currentChar > 47 && currentChar < 58)
                                {
                                    state = 5;
                                }
                                else if (state == 5 && currentChar > 47 && currentChar < 58)
                                {
                                    continue;
                                }
                                else if (state == 6)
                                {
                                    if (currentChar > 47 && currentChar < 58)
                                    {
                                        state = 5;
                                        continue;
                                    }
                                    else
                                    {
                                        return AphidTokenType.Unknown;
                                    }
                                }
                                else if (state == 1 || state == 3 || state == 5)
                                {
                                    charIndex--;

                                    return AphidTokenType.Number;
                                }
                                else if (state == 2)
                                {
                                    charIndex -= 2;

                                    return AphidTokenType.Number;
                                }
                                else
                                {
                                    break;
                                }
                            }
                            while (NextChar());

                            if (state == 1 || state == 3 || state == 5) { return AphidTokenType.Number; }

                            break;

                    }

                    return AphidTokenType.Unknown;
                }
            }


            return AphidTokenType.EndOfFile;
        }

        public List<AphidToken> GetTokens()
        {
            charIndex = -1;

            AphidTokenType tokenType;

            int lastIndex = -1;

            var tokens = new List<AphidToken>();

            while ((tokenType = GetToken()) != AphidTokenType.EndOfFile)
            {
                if (tokenType != AphidTokenType.WhiteSpace && tokenType != AphidTokenType.Comment)
                {
                    var index = lastIndex + 1;
                    var lexeme = text.Substring(index, charIndex - lastIndex);

                    tokens.Add(new AphidToken(tokenType, lexeme, index));

                }

                lastIndex = charIndex;
            }

            return tokens;
        }

        public List<AphidToken> GetAllTokens()
        {
            charIndex = -1;

            AphidTokenType tokenType;

            int lastIndex = -1;

            var tokens = new List<AphidToken>();

            while ((tokenType = GetToken()) != AphidTokenType.EndOfFile)
            {
                var index = lastIndex + 1;
                var lexeme = text.Substring(index, charIndex - lastIndex);

                tokens.Add(new AphidToken(tokenType, lexeme, index));


                lastIndex = charIndex;
            }

            return tokens;
        }
    }
}
#pragma warning restore 0162
